<Application xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="qBittorrentCompanion.App"
  xmlns:local="clr-namespace:qBittorrentCompanion"
  xmlns:converters="clr-namespace:qBittorrentCompanion.Converters"
	xmlns:ic="using:FluentIcons.Avalonia"
  xmlns:cc="clr-namespace:qBittorrentCompanion.CustomControls"
	xmlns:vm="clr-namespace:qBittorrentCompanion.ViewModels;assembly=qBittorrentCompanion"
  RequestedThemeVariant="Default">
  <!-- "Default" ThemeVariant follows system theme variant. "Dark" or "Light" are other available options. -->
	<Application.DataTemplates>
		<local:ViewLocator/>
	</Application.DataTemplates>

	<Application.Resources>
		<converters:NegativeOneToNAConverter x:Key="NegativeOneToNAConverter" />
		<converters:BytesToHumanReadableConverter x:Key="BytesToHumanReadableConverter"/>
		<converters:BytesSpeedToHumanReadableConverter x:Key="BytesSpeedToHumanReadableConverter"/>
		<converters:CountryCodeToFlagConverter x:Key="CountryCodeToFlagConverter"/>
		<converters:NullToBoolConverter x:Key="NullToBoolConverter"/>
		<converters:NullToZeroConverter x:Key="NullToZeroConverter"/>
		<converters:StringNotEmptyToBoolConverter x:Key="StringNotEmptyToBoolConverter"/>
		<converters:DaysAgoConverter x:Key="DaysAgoConverter"/>
		<converters:BoolToIconConverter x:Key="BoolToIconConverter"/>
		<converters:BoolToIconConverter x:Key="BoolToClassConverter"/>
		<converters:IsListBoxAndNotConverter x:Key="IsListBoxAndNotConverter"/>
		<converters:UrlToIconConverter x:Key="UrlToIconConverter"/>
		<converters:ProxyTypeConverter x:Key="ProxyTypeConverter"/>
		<converters:BittorrentProtocolToBoolConverter x:Key="BittorrentProtocolToBoolConverter"/>
		<converters:StringMatchToBoolConverter x:Key="StringMatchToBoolConverter"/>
		<converters:IntMatchToBoolConverter x:Key="IntMatchToBoolConverter"/>
		<converters:UploadChokingAlgorithmConverter x:Key="UploadChokingAlgorithmConverter"/>
		<converters:UploadSlotBehaviorConverter x:Key="UploadSlotBehaviorConverter"/>
		<converters:DataStorageTypeConverter x:Key="DataStorageTypeConverter"/>
		<converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
		<converters:DynamicDnsServiceConverter x:Key="DynamicDnsServiceConverter"/>
		<converters:TorrentContentPriorityConverter x:Key="TorrentContentPriorityConverter"/>
		
		<x:Double x:Key="TabItemHeaderFontSize">16</x:Double><!-- Default 24 -->
		<x:Double x:Key="TabStripItemMinHeight">20</x:Double><!-- Default 48 -->
		
		<Brush x:Key="ToggleSwitchKnobFillOn">Black</Brush>
		<Brush x:Key="ToggleSwitchKnobFillOnPointerOver">Black</Brush>
		
		<Brush x:Key="RadioButtonCheckGlyphFill">Transparent</Brush>
		<Brush x:Key="RadioButtonCheckGlyphFillPointerOver">Transparent</Brush>
		
		<Thickness x:Key="TabItemHeaderMargin">8,0,8,0</Thickness><!-- Default 12 -->
		<Thickness x:Key="TabItemMargin">8,0,8,0</Thickness><!-- Default 12 -->
		<Thickness x:Key="ExpanderHeaderBorderThickness">0,0,0,0</Thickness>
		<Thickness x:Key="ExpanderContentDownBorderThickness">0,0,0,0</Thickness>

		<DataTemplate x:Key="TorrentContentComboBoxTemplate" DataType="{x:Type vm:TorrentContentViewModel}">
			<ComboBox ItemsSource="{Binding TorrentContentPriorities}"
								MinWidth="135"
								HorizontalAlignment="Center"
								SelectedItem="{Binding Priority, Mode=TwoWay, Converter={StaticResource TorrentContentPriorityConverter}}"
								Theme="{DynamicResource DataGridComboBox}" />
		</DataTemplate>		
		
		<ControlTheme x:Key="PipeTop" TargetType="TabItem">
			<Setter Property="FontSize" Value="{DynamicResource TabItemHeaderFontSize}" />
			<Setter Property="FontWeight" Value="{DynamicResource TabItemHeaderThemeFontWeight}" />
			<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundUnselected}" />
			<Setter Property="Foreground" Value="{DynamicResource TabItemHeaderForegroundUnselected}" />
			<Setter Property="Padding" Value="{DynamicResource TabItemHeaderMargin}" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="MinHeight" Value="{DynamicResource TabItemMinHeight}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Template">
				<ControlTemplate>
					<Border
							Name="PART_LayoutRoot"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"
							Padding="{TemplateBinding Padding}"
							Margin="0 8 0 0">
						<Panel>
							<ContentPresenter
									Name="PART_ContentPresenter"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
									RecognizesAccessKey="True"
                />
							<Border Name="PART_SelectedPipe"
											Background="{DynamicResource TabItemHeaderSelectedPipeFill}"
											CornerRadius="{DynamicResource ControlCornerRadius}"
											IsVisible="False"/>
						</Panel>
					</Border>
				</ControlTemplate>
			</Setter>


			<!--  Selected state  -->
			<!--  We don't use selector to PART_LayoutRoot, so developer can override selected item background with TabStripItem.Background  -->
			<Style Selector="^:selected">
				<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundSelected}" />
				<Setter Property="Foreground" Value="{DynamicResource TabItemHeaderForegroundSelected}" />
			</Style>
			<Style Selector="^:selected /template/ Border#PART_SelectedPipe">
				<Setter Property="IsVisible" Value="True" />
			</Style>

			<!--  PointerOver state  -->
			<Style Selector="^:pointerover /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundUnselectedPointerOver}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundUnselectedPointerOver}" />
			</Style>

			<!--  Selected PointerOver state  -->
			<Style Selector="^:selected:pointerover /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundSelectedPointerOver}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundSelectedPointerOver}" />
			</Style>

			<!--  Pressed state  -->
			<Style Selector="^:pressed /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundUnselectedPressed}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundUnselectedPressed}" />
			</Style>

			<!--  Selected Pressed state  -->
			<Style Selector="^:selected:pressed /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundSelectedPressed}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundSelectedPressed}" />
			</Style>

			<!--  Disabled state  -->
			<Style Selector="^:disabled /template/ Border#PART_LayoutRoot">
				<Setter Property="Background" Value="{DynamicResource TabItemHeaderBackgroundDisabled}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource TabItemHeaderForegroundDisabled}" />
			</Style>

			<!--  TabStripPlacement States Group  -->
			<Style Selector="^[TabStripPlacement=Left] /template/ Border#PART_SelectedPipe">
				<Setter Property="Width" Value="{DynamicResource TabItemPipeThickness}" />
				<Setter Property="Height" Value="{DynamicResource TabItemVerticalPipeHeight}" />
				<Setter Property="Margin" Value="0,0,2,0" />
				<Setter Property="HorizontalAlignment" Value="Left" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>
			<Style Selector="^[TabStripPlacement=Left] /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Margin" Value="8,0,0,0" />
			</Style>

			<Style Selector="^[TabStripPlacement=Top] /template/ Border#PART_SelectedPipe, ^[TabStripPlacement=Bottom] /template/ Border#PART_SelectedPipe">
				<Setter Property="Height" Value="{DynamicResource TabItemPipeThickness}" />
				<Setter Property="Margin" Value="0,0,0,2" />
				<Setter Property="HorizontalAlignment" Value="Stretch" />
				<Setter Property="VerticalAlignment" Value="Top" />
			</Style>

			<Style Selector="^[TabStripPlacement=Right] /template/ Border#PART_SelectedPipe">
				<Setter Property="Width" Value="{DynamicResource TabItemPipeThickness}" />
				<Setter Property="Height" Value="{DynamicResource TabItemVerticalPipeHeight}" />
				<Setter Property="Margin" Value="0,0,2,0" />
				<Setter Property="HorizontalAlignment" Value="Right" />
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>
			<Style Selector="^[TabStripPlacement=Right] /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Margin" Value="0,0,8,0" />
			</Style>
			<Style Selector="^[TabStripPlacement=Right]">
				<Setter Property="HorizontalContentAlignment" Value="Right" />
			</Style>
		</ControlTheme>

		<!-- ComboBox for DataGrid/TreeDataGrid -->
		<ControlTheme x:Key="DataGridComboBox" TargetType="ComboBox">
			<Setter Property="Padding" Value="{DynamicResource ComboBoxPadding}" />
			<Setter Property="FocusAdorner" Value="{x:Null}" />
			<Setter Property="MaxDropDownHeight" Value="504" />
			<Setter Property="Foreground" Value="{DynamicResource ComboBoxForeground}" />
			<Setter Property="Background" Value="{DynamicResource ComboBoxBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
			<Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
			<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="MinHeight" Value="{DynamicResource ComboBoxMinHeight}" />
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="PlaceholderForeground" Value="{DynamicResource ComboBoxPlaceHolderForeground}" />
			<Setter Property="Template">
				<ControlTemplate>
					<DataValidationErrors>
						<Grid ColumnDefinitions="*,32">
							<Border x:Name="Background"
											Grid.Column="0"
											Grid.ColumnSpan="2"
											Background="Transparent"
											BorderBrush="Transparent"
											BorderThickness="0"
											MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />
							<Border x:Name="HighlightBackground"
											Grid.Column="0"
											Grid.ColumnSpan="2"
											Background="{DynamicResource ComboBoxBackgroundUnfocused}"
											BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
											BorderThickness="{TemplateBinding BorderThickness}"
											CornerRadius="{TemplateBinding CornerRadius}"
											IsVisible="False"/>
							<TextBlock x:Name="PlaceholderTextBlock"
												 Grid.Column="0"
												 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												 Margin="4 2"
												 Text="{TemplateBinding PlaceholderText}"
												 Foreground="{TemplateBinding PlaceholderForeground}"
												 IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
							<ContentControl x:Name="ContentPresenter"
															Content="{TemplateBinding SelectionBoxItem}"
															Grid.Column="0"
															Margin="4 2"
															HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"															
															VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
							</ContentControl>

							<Border x:Name="DropDownOverlay"
											Grid.Column="1"
											Background="Transparent"
											Margin="0,1,1,1"
											Width="30"
											IsVisible="False"
											HorizontalAlignment="Right" />

							<PathIcon x:Name="DropDownGlyph"
												Grid.Column="1"
												UseLayoutRounding="False"
												IsHitTestVisible="False"
												Height="12"
												Width="12"
												Margin="0,0,10,0"
												HorizontalAlignment="Right"
												VerticalAlignment="Center"
												Foreground="{DynamicResource ComboBoxDropDownGlyphForeground}"
												Data="M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"/>

							<Popup Name="PART_Popup"
										 WindowManagerAddShadowHint="False"
										 IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
										 MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
										 MaxHeight="{TemplateBinding MaxDropDownHeight}"
										 PlacementTarget="Background"
										 IsLightDismissEnabled="True"
										 InheritsTransform="True">
								<Border x:Name="PopupBorder"
												Background="{DynamicResource ComboBoxDropDownBackground}"
												BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
												BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}"
												Padding="{DynamicResource ComboBoxDropdownBorderPadding}"
												HorizontalAlignment="Stretch"
												CornerRadius="{DynamicResource OverlayCornerRadius}">
									<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
																VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
																IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}">
										<ItemsPresenter Name="PART_ItemsPresenter"
																		Margin="{DynamicResource ComboBoxDropdownContentMargin}"
																		ItemsPanel="{TemplateBinding ItemsPanel}" />
									</ScrollViewer>
								</Border>
							</Popup>
						</Grid>
					</DataValidationErrors>
				</ControlTemplate>
			</Setter>

			<!--  PointerOver State  -->
			<Style Selector="^:pointerover /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundPointerOver}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPointerOver}" />
			</Style>

			<!--  Pressed State  -->
			<Style Selector="^:pressed /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundPressed}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushPressed}" />
			</Style>

			<!-- Error State -->
			<Style Selector="^:error /template/ Border#Background">
				<Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
			</Style>

			<!--  Focus Pressed State  -->
			<Style Selector="^:focused:pressed">
				<Style Selector="^ /template/ ContentControl#ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundFocusedPressed}" />
				</Style>
				<Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxPlaceHolderForegroundFocusedPressed}" />
				</Style>
				<Style Selector="^ /template/ PathIcon#DropDownGlyph">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocusedPressed}" />
				</Style>
			</Style>

			<!--  Focused State  -->
			<Style Selector="^:focus-visible">
				<Style Selector="^ /template/ Border#HighlightBackground">
					<Setter Property="IsVisible" Value="True" />
					<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBackgroundBorderBrushFocused}" />
				</Style>
				<Style Selector="^ /template/ ContentControl#ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundFocused}" />
				</Style>
				<Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundFocused}" />
				</Style>
				<Style Selector="^ /template/ PathIcon#DropDownGlyph">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundFocused}" />
				</Style>
			</Style>

			<!--  Disabled State  -->
			<Style Selector="^:disabled">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}" />
					<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrushDisabled}" />
				</Style>
				<Style Selector="^ /template/ ContentControl#ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
				</Style>
				<Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxForegroundDisabled}" />
				</Style>
				<Style Selector="^ /template/ PathIcon#DropDownGlyph">
					<Setter Property="Foreground" Value="{DynamicResource ComboBoxDropDownGlyphForegroundDisabled}" />
				</Style>
			</Style>
		</ControlTheme>

	</Application.Resources>
	
  <Application.Styles>
		<FluentTheme />
		<StyleInclude Source="avares://Avalonia.Controls.DataGrid/Themes/Fluent.xaml"/>
		<StyleInclude Source="avares://Avalonia.Controls.TreeDataGrid/Themes/Fluent.axaml"/>
		
		<Style Selector="HeaderedContentControl">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border>
							<StackPanel>
								<ContentPresenter FontWeight="Bold" Content="{TemplateBinding Header}" />
								<Border
										BorderBrush="{TemplateBinding Background}"
										BorderThickness="2"
										CornerRadius="5">
									<ContentPresenter Content="{TemplateBinding Content}" />
								</Border>
							</StackPanel>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style Selector="GridSplitter">
			<Setter Property="Background" Value="{DynamicResource SystemAltMediumColor}"/>
		</Style>
		<Style Selector="Grid#StatusBarGrid">
			<Setter Property="Background" Value="Black"/>
		</Style>
		<Style Selector="ProgressBar">
			<Setter Property="CornerRadius" Value="0"/>
		</Style>
		<Style Selector="TextBlock">
			<Setter Property="VerticalAlignment" Value="Bottom"/>
		</Style>

		<!-- Makes it appear as if the whole row is selected rather than a single cell -->
		<Style Selector="DataGrid:focus DataGridCell:current /template/ Grid#FocusVisual">
			<Setter Property="IsVisible" Value="False"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<Style Selector="DataGridCell">
			<Setter Property="VerticalContentAlignment" Value="Center"/>
		</Style>

		<Style Selector="TextBlock.Title">
			<Setter Property="FontSize" Value="24"/>
			<Setter Property="Margin" Value="0 0 0 10"/>
		</Style>

		<Style Selector="Button.MainButton, SplitButton.MainButton">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="8"/>
		</Style>
		<Style Selector="Button.MainButton.accent:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Foreground" Value="Black"/>
		</Style>
		<Style Selector="SplitButton.MainButton">
			<Setter Property="Background" Value="{DynamicResource SystemAccentColor}" />
			<Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}" />
		</Style>
		<Style Selector="SplitButton.MainButton:pointerover>Grid>Button /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource SystemAccentColorLight1}" />
			<Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColorLight1}" />
			<Setter Property="Foreground" Value="Black" />
		</Style>
		<Style Selector="SplitButton.MainButton:pointerover>Grid>Button:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1}" />
			<Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColorDark1}" />
			<Setter Property="Foreground" Value="Black" />
		</Style>
		<Style Selector="SplitButton.MainButton:pointerover>Grid>Button#PART_SecondaryButton PathIcon">
			<Setter Property="Foreground" Value="Black" />
		</Style>
		<Style Selector="Button:disabled">
			<Setter Property="Opacity" Value="0.3"/>
		</Style>
		<Style Selector="Button.Delete">
			<Setter Property="Background" Value="Maroon"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
		</Style>
		
		<!-- Invalid TextBox styling -->
		<Style Selector="TextBlock.Info">
			<Setter Property="Background" Value="#330000FF"/>
			<Setter Property="Padding" Value="5"/>
		</Style>
		
		<Style Selector="Button.FlyoutButton Label">
			<Setter Property="HorizontalContentAlignment" Value="Right"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
		</Style>
		<Style Selector="Button.FlyoutButton TextBox">
			<Setter Property="Margin" Value="0 2 0 2"/>
			<Setter Property="MinWidth" Value="200"/>
		</Style>
		<Style Selector="Button.FlyoutButton Button">
			<Setter Property="HorizontalContentAlignment" Value="Center"/> 
		</Style>
		<Style Selector="ic|SymbolIcon">
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
		</Style>
		<Style Selector="ic|SymbolIcon.Spinner">
			<Style.Animations>
				<Animation Duration="0:0:3" IterationCount="INFINITE">
					<KeyFrame Cue="0%">
						<Setter Property="RotateTransform.Angle" Value="0.0"/>
					</KeyFrame>
					<KeyFrame Cue="100%">
						<Setter Property="RotateTransform.Angle" Value="360.0"/>
					</KeyFrame>
				</Animation>
			</Style.Animations>
		</Style>
		<!-- Columns are a bit special, targeting them through the header -->
		<Style Selector="DataGridCell.RightAlignedMonospaced">
			<Setter Property="HorizontalContentAlignment" Value="Right"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="6 3 6 -3"/>
			<Setter Property="FontFamily" Value="Inconsolata, Consolas, Monospace, Courier"/>
		</Style>
		<Style Selector="DataGridCell ProgressBar">
			<Setter Property="Margin" Value="2,-6,2,0"/>
		</Style>
		<Style Selector="TabStrip">
			<Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrush}"/>
		</Style>
		<Style Selector="DockPanel.Title">
			<Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrush}"/>
		</Style>
		<Style Selector="DockPanel.Title TextBlock">
			<Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeaderForegroundBrush}"/>
		</Style>
		<Style Selector="TreeDataGridColumnHeader">
			<Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeaderForegroundBrush}"/>
			<Setter Property="MinHeight" Value="30"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Padding" Value="12 0 12 6"/>
		</Style>
		<Style Selector="TextBlock.HeaderColors">
			<Setter Property="Background" Value="{DynamicResource DataGridColumnHeaderBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeaderForegroundBrush}"/>
		</Style>
		<Style Selector="TreeDataGridCell">
			<Setter Property="Padding" Value="12 0 12 0"/>
		</Style>
		<Style Selector="DataGridRow:nth-child(odd), TreeDataGridRow:nth-child(odd)">
			<Setter Property="Background" Value="#33000000"/>
		</Style>
		<Style Selector="HeaderedContentControl>Border">
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
			<Setter Property="Margin" Value="8"/>
			<Setter Property="Padding" Value="10"/>
		</Style>
		<Style Selector="ListBox">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
	</Application.Styles>
</Application>