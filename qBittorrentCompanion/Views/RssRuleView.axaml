<UserControl xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d" d:DesignWidth="520" d:DesignHeight="850"
						 
	xmlns:views="clr-namespace:qBittorrentCompanion.Views"
	xmlns:vm="using:qBittorrentCompanion.ViewModels"
  x:Class="qBittorrentCompanion.Views.RssRuleView"
	x:DataType="vm:RssAutoDownloadingRuleViewModel"
	Name="UserControl"
>
	<UserControl.Styles>
		<Style Selector="CheckBox.UseRegexRow">
			<Setter Property="ToolTip.Tip" Value="Alters how 'Must contain' and 'Must not contain' work"/>
		</Style>
		<Style Selector="TextBlock.ContentHeader">
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontWeight" Value="Normal"/>
		</Style>
		<Style Selector="HeaderedContentControl>StackPanel">
			<Setter Property="Margin" Value="8 0"/>
		</Style>
		<Style Selector="Button.MainButton">
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="8"/>
			<Setter Property="Margin" Value="12 8 4 8"/>
		</Style>
		<Style Selector="TextBox.MustContainRow, Label.MustContainRow, TextBox.MustNotContainRow, Label.MustNotContainRow">
			<Setter Property="ToolTip.Tip">
				<Template>
					<StackPanel>
						<StackPanel IsVisible="{Binding ElementName=UseRegexCheckBox, Path=IsChecked}" Margin="10">
							<TextBlock>
								<Run Text="Mode:" FontWeight="Bold" FontSize="20"></Run>
								<Run Text="Regular Expression" FontSize="20"/>
								<LineBreak/>
								<LineBreak/>
								<Run Text="Use Perl-compatible regular expressions."/>
								<LineBreak/>
								<Run Text="If the background gets tinted red the regular expression is invalid"/>
							</TextBlock>
						</StackPanel>
						<StackPanel IsVisible="{Binding ElementName=UseRegexCheckBox, Path=!IsChecked}" Margin="10">
							<TextBlock>
								<Run Text="Mode:" FontWeight="Bold" FontSize="20"></Run>
								<Run Text="Wildcard" FontSize="20" />
								<LineBreak/>
								<LineBreak/>

								<Run Text="• ? to match any single character"/>
								<LineBreak/>
								<Run Text="• * to match zero or more characters"/>
								<LineBreak/>
								<Run Text="• White-spaces count and AND operators (all words, any order)"/>
								<LineBreak/>
								<Run Text="• | is used as a or operator"/>
								<LineBreak/>
								<LineBreak/>

								<Run Text="If word order is important use * instead of white-space."/>
								<LineBreak/>
								<Run Text="An expression with an empty | clause (e.g. expre|) will match all articles."/>
							</TextBlock>
						</StackPanel>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
		<Style Selector="Label.EpisodeFilterRow, TextBox.EpisodeFilterRow">
			<Setter Property="ToolTip.Tip">
				<Template>
					<StackPanel>
						<TextBlock>
							<Run>Matches articles based on episode filter.</Run>
							<LineBreak/>
							<Run>Example: 1x2;8-15;5;30- will match 2, 5, 8 through 15, 30 and onward episodes of season one.</Run>
							<LineBreak/>
							<Run>Episode filter rules:</Run>
							<LineBreak/>
							<Run>• Season number is a mandatory non-zero value</Run>
							<LineBreak/>
							<Run>• Episode number is a mandatory positive value</Run>
							<LineBreak/>
							<Run>• Filter</Run>
							<Run FontWeight="Bold">must</Run>
							<Run>end with semicolon</Run>
							<LineBreak/>
							<Run>• Three range types for episodes are supported:</Run>
						</TextBlock>
						<TextBlock Padding="20 0 0 0">
							<Run>  • Single number: 1x25; matches episode 25 of season one</Run>
							<LineBreak/>
							<Run>  • Normal range: 1x25-40; matches episodes 25 through 40 of season one</Run>
							<LineBreak/>
							<Run>  • Infinite range number: 1x25-; matches episodes 25 and upward of season one, and all episodes of later seasons</Run>
						</TextBlock>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
	</UserControl.Styles>
	<Border x:Name="CenterColumnBorder" 
		BorderBrush="{DynamicResource SystemAccentColorDark1}" 
		BorderThickness="0" 
		IsEnabled="{Binding #UserControl.IsEnabled}">
		<DockPanel LastChildFill="False">
			<Button Grid.Row="15"
				Grid.ColumnSpan="2"
				Classes="MainButton accent"
				DockPanel.Dock="Bottom"
			>Save rule</Button>
			<ScrollViewer VerticalScrollBarVisibility="Visible" DockPanel.Dock="Top">
				<StackPanel Margin="0 0 20 0">

					<DockPanel Classes="Title">
						<Panel>
							<TextBlock DockPanel.Dock="Top" Text="Rule Definition" />
						</Panel>
					</DockPanel>				

					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<DockPanel>
								<CheckBox
									HorizontalAlignment="Left"
									DockPanel.Dock="Right"
									Margin="0 0 8 0"
									VerticalAlignment="Bottom"
									Background=""
									IsChecked="{Binding Enabled}">Enabled</CheckBox>
								<TextBlock DockPanel.Dock="Left" Classes="ContentHeader">Apply rule to feeds</TextBlock>
							</DockPanel>
						</HeaderedContentControl.Header>
						<DockPanel>
							<ListBox Margin="0 8"
									SelectionMode="Multiple"
									Name="RssFeedsForRuleListBox"
									x:Name="RssFeedsForRuleListBox"
									ItemsSource="{Binding RssFeeds}"
									SelectedItems="{Binding SelectedFeeds}"
									MinHeight="40"
									DockPanel.Dock="Top"
							>
								<ListBox.Styles>
									<Style Selector="ListBoxItem">
										<Setter Property="Width" Value="200"/>
									</Style>
									<Style Selector="TextBlock">
										<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
									</Style>
								</ListBox.Styles>
								<ListBox.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel Orientation="Horizontal" />
									</ItemsPanelTemplate>
								</ListBox.ItemsPanel>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Title}" ToolTip.Tip="{Binding Url}" />
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
							<CheckBox DockPanel.Dock="Bottom" x:Name="AddPausedComboBox" Margin="0 0 10 0">Add paused</CheckBox>
							<Grid ColumnDefinitions="* auto" DockPanel.Dock="Bottom" x:Name="IgnoreMatchesStackPanel">
								<TextBlock VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="Ignore subsequent matches for " />
								<Panel Grid.Column="1" Margin="0 0 16 0">
									<NumericUpDown VerticalAlignment="Center" Width="140" Increment="1" TextAlignment="Right" Value="0" Minimum="0" Maximum="999" Padding="0 6 40 0"/>
									<TextBlock Text="days" Opacity="0.5" Margin="35 10 0 10"/>
								</Panel>
							</Grid>
						</DockPanel>
					</HeaderedContentControl>

					
					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<TextBlock Classes="ContentHeader">Filter setings</TextBlock>
						</HeaderedContentControl.Header>
						<StackPanel>
							<CheckBox Name="UseRegexCheckBox" Classes="UseRegexRow"
								x:Name="UseRegexCheckBox" IsChecked="{Binding UseRegex}"
								>Use Regular Expressions</CheckBox>
							<Label Target="MustContainTextBox" VerticalAlignment="Center" Classes="MustContainRow">
								<TextBlock Text="Must contain:"/>
							</Label>
							<TextBox Text="{Binding MustContain}"
								Name="MustContainTextBox"
								Classes="MustContainRow"
								x:Name="MustContainTextBox"/>
							<Label Grid.Column="0" Grid.Row="2" Target="MustNotContainTextBox" VerticalAlignment="Center" Classes="MustNotContainRow">
								<TextBlock Text="Must not contain:"/>
							</Label>
							<TextBox Text="{Binding MustNotContain}"
								x:Name="MustNotContainTextBox" Classes="MustNotContainRow"/>

							<Label Content="Episode filter:" Target="EpisodeFilterTextBox"
											VerticalAlignment="Center" Classes="EpisodeFilterRow" />
							<TextBox Grid.Column="1" Grid.Row="3" 
								Text="{Binding EpisodeFilter}" 
								x:Name="EpisodeFilterTextBox" 
								Classes="EpisodeFilterRow"/>


							<CheckBox Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="8" IsChecked="{Binding SmartFilter}" x:Name="SmartFilterCheckBox">
								Use Smart Episode Filter
							</CheckBox>
						</StackPanel>
					</HeaderedContentControl>

					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<TextBlock Classes="ContentHeader">Save settings</TextBlock>
						</HeaderedContentControl.Header>
						<StackPanel>
							<Label Content="Assign category:" Target="CategoryComboBox"/>
							<ComboBox Grid.Column="1" Grid.Row="9" ItemsSource="{Binding Categories}" HorizontalAlignment="Stretch" x:Name="CategoryComboBox"/>

							<Label Content="Add tags:" Target="TagsTextBox" />
							<TextBox Grid.Column="1" Grid.Row="10" Text="" Name="TagsTextBox"/>

							<Label Content="Torrent content layout:" Target="ContentLayoutComboBox" />
							<ComboBox HorizontalAlignment="Stretch" Name="ContentLayoutComboBox">
								<ComboBoxItem>Use global settings</ComboBoxItem>
								<ComboBoxItem>Original</ComboBoxItem>
								<ComboBoxItem>Create subfolder</ComboBoxItem>
								<ComboBoxItem>Don't create subfolder</ComboBoxItem>
							</ComboBox>

							<HeaderedContentControl Margin="0 8 0 0">
								<HeaderedContentControl.Header>
									<CheckBox x:Name="SaveToDifferentDirectoryCheckBox" IsChecked="{Binding SavePath, Converter={StaticResource StringNotEmptyToBoolConverter}}">
										Save to a different directory
									</CheckBox>
								</HeaderedContentControl.Header>
								<TextBox Margin="0 4 0 0" IsEnabled="{Binding #SaveToDifferentDirectoryCheckBox.IsChecked}" Text="{Binding SavePath}"/>
							</HeaderedContentControl>
						</StackPanel>
					</HeaderedContentControl>					
				</StackPanel>
			</ScrollViewer>

		</DockPanel>
	</Border>

</UserControl>
