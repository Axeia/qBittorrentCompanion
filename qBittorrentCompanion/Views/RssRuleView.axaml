<UserControl xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d" 
	d:DesignWidth="520" d:DesignHeight="850"
						 
	xmlns:views="clr-namespace:qBittorrentCompanion.Views"
	xmlns:vm="using:qBittorrentCompanion.ViewModels"
	xmlns:ic="using:FluentIcons.Avalonia"
	
  x:Class="qBittorrentCompanion.Views.RssRuleView"
	x:DataType="vm:RssAutoDownloadingRuleViewModel"
	Name="UserControl"
	Grid.IsSharedSizeScope="True"
	IsEnabled="{Binding !IsSaving}"
>
	<UserControl.Styles>
		<Style Selector="CheckBox.UseRegexRow">
			<Setter Property="ToolTip.Tip" Value="Alters how 'Must contain' and 'Must not contain' work"/>
		</Style>
		<Style Selector="TextBlock.ContentHeader">
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="FontWeight" Value="Normal"/>
		</Style>
		<Style Selector="Button.MainButton">
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="8"/>
			<Setter Property="Margin" Value="12 8 24 8"/>
		</Style>
		<Style Selector="HeaderedContentControl">
			<Setter Property="Margin" Value="0 0 0 -8"/>
		</Style>
		<Style Selector="HeaderedContentControl>Border">
			<Setter Property="Padding" Value="0"/>
			<Setter Property="CornerRadius" Value="6"/>
		</Style>
		<Style Selector="HeaderedContentControl Border.Header">
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="4 2"/>
			<Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
			<Setter Property="MinHeight" Value="36"/>
			<Setter Property="CornerRadius" Value="6 6 0 0"/>
		</Style>
		<Style Selector="HeaderedContentControl Border.Divider">
			<Setter Property="Background" Value="{DynamicResource SystemListLowColor}"/>
			<Setter Property="Width" Value="1"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="Margin" Value="8 0"/>
		</Style>
		<Style Selector="HeaderedContentControl DockPanel.CheckBoxed ToggleSwitch">
			<Setter Property="Margin" Value="0 0 0 -4"/>
			<Setter Property="FontWeight" Value="Normal"/>
		</Style>
		<Style Selector="Grid.HLayout>TextBox, Grid.HLayout>ComboBox, Grid.HLayout>Label">
			<Setter Property="Margin" Value="0 4 0 0"/>
		</Style>
		<Style Selector="Grid.HLayout>Label">
			<Setter Property="HorizontalContentAlignment" Value="Right"/>
		</Style>
		<Style Selector="StackPanel.Body, Grid.HLayout">
			<Setter Property="Margin" Value="4"/>
		</Style>
		<Style Selector="Grid.HLayout">
			<Setter Property="Margin" Value="4 2"/>
		</Style>
		<Style Selector="TextBox.MustContainRow, Label.MustContainRow, TextBox.MustNotContainRow, Label.MustNotContainRow">
			<Setter Property="ToolTip.Tip">
				<Template>
					<StackPanel>
						<StackPanel IsVisible="{Binding ElementName=UseRegexCheckBox, Path=IsChecked}" Margin="10">
							<TextBlock>
								<Run Text="Mode:" FontWeight="Bold" FontSize="20"></Run>
								<Run Text="Regular Expression" FontSize="20"/>
								<LineBreak/>
								<LineBreak/>
								<Run Text="Use Perl-compatible regular expressions."/>
								<LineBreak/>
								<Run Text="If the background gets tinted red the regular expression is invalid"/>
							</TextBlock>
						</StackPanel>
						<StackPanel IsVisible="{Binding ElementName=UseRegexCheckBox, Path=!IsChecked}" Margin="10">
							<TextBlock>
								<Run Text="Mode:" FontWeight="Bold" FontSize="20"></Run>
								<Run Text="Wildcard" FontSize="20" />
								<LineBreak/>
								<LineBreak/>

								<Run Text="• ? to match any single character"/>
								<LineBreak/>
								<Run Text="• * to match zero or more characters"/>
								<LineBreak/>
								<Run Text="• White-spaces count and AND operators (all words, any order)"/>
								<LineBreak/>
								<Run Text="• | is used as a or operator"/>
								<LineBreak/>
								<LineBreak/>

								<Run Text="If word order is important use * instead of white-space."/>
								<LineBreak/>
								<Run Text="An expression with an empty | clause (e.g. expre|) will match all articles."/>
							</TextBlock>
						</StackPanel>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
		<Style Selector="Label.EpisodeFilterRow, TextBox.EpisodeFilterRow">
			<Setter Property="ToolTip.Tip">
				<Template>
					<StackPanel>
						<TextBlock>
							<Run>Matches articles based on episode filter.</Run>
							<LineBreak/>
							<Run>Example: 1x2;8-15;5;30- will match 2, 5, 8 through 15, 30 and onward episodes of season one.</Run>
							<LineBreak/>
							<Run>Episode filter rules:</Run>
							<LineBreak/>
							<Run>• Season number is a mandatory non-zero value</Run>
							<LineBreak/>
							<Run>• Episode number is a mandatory positive value</Run>
							<LineBreak/>
							<Run>• Filter</Run>
							<Run FontWeight="Bold">must</Run>
							<Run>end with semicolon</Run>
							<LineBreak/>
							<Run>• Three range types for episodes are supported:</Run>
						</TextBlock>
						<TextBlock Padding="20 0 0 0">
							<Run>  • Single number: 1x25; matches episode 25 of season one</Run>
							<LineBreak/>
							<Run>  • Normal range: 1x25-40; matches episodes 25 through 40 of season one</Run>
							<LineBreak/>
							<Run>  • Infinite range number: 1x25-; matches episodes 25 and upward of season one, and all episodes of later seasons</Run>
						</TextBlock>
					</StackPanel>
				</Template>
			</Setter>
		</Style>
	</UserControl.Styles>

	<Grid RowDefinitions="* auto">
		<Border
			BorderBrush="{DynamicResource SystemAccentColorDark3}"
			BorderThickness="0 0 1 0">
			<ScrollViewer 
				Grid.Row="0"
				x:Name="RuleDefinitionScrollViewer"
				VerticalScrollBarVisibility="Visible" 
				FlowDirection="RightToLeft" 
				Margin="0 0 0 0">
				<StackPanel FlowDirection="LeftToRight" Margin="0 -8 0 0">

					<Border 
						Background="{DynamicResource SystemListLowColor}" 
						Padding="4 12 4 6" 
						BorderBrush="{DynamicResource SystemAccentColorDark3}"
						BorderThickness="0 0 0 1">
						<StackPanel>
							<StackPanel.Styles>
								<Style Selector="TextBlock">
									<Setter Property="Margin" Value="0 4 0 0"/>
								</Style>
							</StackPanel.Styles>
							<DockPanel>
								<CheckBox IsChecked="{Binding UseRssPlugin}" x:Name="UsePluginCheckBox">Use plugin</CheckBox>
								<ComboBox
									ItemsSource="{Binding RssPluginsViewModel.Plugins}"
									SelectedItem="{Binding RssPluginsViewModel.SelectedPlugin}"
									DisplayMemberBinding="{Binding Name}"
									IsEnabled="{Binding #UsePluginCheckBox.IsChecked}"
									HorizontalAlignment="Right"/>
							</DockPanel>

							<Panel Grid.ColumnSpan="2" Margin="0 4 0 0" IsVisible="{Binding #UsePluginCheckBox.IsChecked}">
								<TextBox
									x:Name="PluginSourceTextBox"
									Watermark="Torrent name you want the plugin to process"
									Text="{Binding PluginInput}"
									PastingFromClipboard="PluginSourceTextBox_PastingFromClipboard"
									TextWrapping="WrapWithOverflow"
									Padding="8 0"/>
							</Panel>
							
							<TextBlock IsVisible="{Binding PluginErrorText, Converter={StaticResource StringNotEmptyToBoolConverter}}" Foreground="{DynamicResource SystemErrorTextColor}">
								<ic:SymbolIcon Symbol="ErrorCircle" />
								<Run Text="{Binding PluginErrorText}"/>
							</TextBlock>
							<TextBlock IsVisible="{Binding PluginWarningText, Converter={StaticResource StringNotEmptyToBoolConverter}}" Foreground="{DynamicResource SystemErrorTextColor}">
								<ic:SymbolIcon Symbol="Warning" />
								<Run Text="{Binding PluginWarningText}"/>
							</TextBlock>							
						</StackPanel>
					</Border>
					
					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<Border Classes="Header">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="auto" SharedSizeGroup="H"/>
									</Grid.ColumnDefinitions>
									<Label Grid.Column="0" Target="{Binding #NameTextBox}">
										<TextBlock Classes="ContentHeader" Text="Rule"/>
									</Label>
									<Border Grid.Column="1" Classes="Divider"/>
									<DockPanel Grid.Column="2">
										<ic:SymbolIcon
											Symbol="Info"
											Margin="0 0 4 0"
											VerticalAlignment="Center"
											Foreground="{DynamicResource SystemAccentColor}"
											ToolTip.Tip="A disabled rule will never download anything"
											IsVisible="{Binding !#IsEnabledToggleSwitch.IsChecked}"/>
										<ToggleSwitch
											x:Name="IsEnabledToggleSwitch"											
											HorizontalAlignment="Right"
											FontWeight="Normal"
											VerticalAlignment="Bottom"
											OnContent="Enabled"
											OffContent="Disabled"
											IsChecked="{Binding Enabled}">
										</ToggleSwitch>
									</DockPanel>
								</Grid>
							</Border>
						</HeaderedContentControl.Header>
							<TextBox 
								x:Name="NameTextBox" 
								Watermark="Name of the rule"
								Text="{Binding Title}"/>
					</HeaderedContentControl>

					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<Border Classes="Header">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="auto" SharedSizeGroup="H"/>
									</Grid.ColumnDefinitions>
									<TextBlock Grid.Column="0" Classes="ContentHeader" Text="Apply rule to feeds"/>
									<Button
										Grid.Column="2"
										Padding="2"
										Margin="0"
										HorizontalAlignment="Right"
										FontWeight="Normal"
										HorizontalContentAlignment="Center"
										Click="SwitchToFeedsButton_Click"	
										ToolTip.Tip="If there's no feeds to add below you will have to add some right here, or under the RSS Feeds tab">
										<ic:SymbolIcon Symbol="SquareAdd"/>
									</Button>
								</Grid>
							</Border>
						</HeaderedContentControl.Header>
						<StackPanel Classes="Body">
							<ListBox 
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Grid.Row="0"
								SelectionMode="Multiple"
								x:Name="RssFeedsForRuleListBox"
								ItemsSource="{Binding RssFeeds}"
								SelectedItems="{Binding SelectedFeeds}"
								Margin="0 8"
								MinHeight="40"
								BorderThickness="1">
								<ListBox.Styles>
									<Style Selector="ListBoxItem">
										<Setter Property="Width" Value="200"/>
									</Style>
									<Style Selector="TextBlock">
										<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
									</Style>
								</ListBox.Styles>
								<ListBox.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel Orientation="Horizontal"/>
									</ItemsPanelTemplate>
								</ListBox.ItemsPanel>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<TextBlock Text="{Binding Title}" ToolTip.Tip="{Binding Url}" />
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</StackPanel>
					</HeaderedContentControl>
					
					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<Border Classes="Header">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="auto" SharedSizeGroup="H"/>
									</Grid.ColumnDefinitions>
									<TextBlock Classes="ContentHeader">Filter settings</TextBlock>
									<Border Grid.Column="1" Classes="Divider"/>
									<DockPanel Grid.Column="2">
										<ic:SymbolIcon
											Symbol="Info"
											Margin="0 0 4 0"
											VerticalAlignment="Center"
											Foreground="{DynamicResource SystemAccentColor}">
											<ToolTip.Tip>
												<TextBlock>
													<Run Text="The must contain/must not contain fields behave very differently depending on the state of this setting."/>
													<LineBreak/>
													<LineBreak/>
													<Run Text="The tooltips on them will automatically adjust to reflect what they do"/>
												</TextBlock>
											</ToolTip.Tip>
										</ic:SymbolIcon>
										<ToggleSwitch 
											HorizontalAlignment="Right"
											x:Name="UseRegexCheckBox"
											Classes="UseRegexRow"
											FontWeight="Normal"
											IsChecked="{Binding UseRegex}"
											DockPanel.Dock="Right"
											OnContent="Use regex"
											OffContent="Use regex"/>
										</DockPanel>
								</Grid>
							</Border>
						</HeaderedContentControl.Header>
						<Grid RowDefinitions="auto auto auto auto auto" Classes="HLayout">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" SharedSizeGroup="L"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Label Grid.Column="0" Grid.Row="0" Content="Must contain" Target="MustContainTextBox" VerticalAlignment="Center" Classes="MustContainRow"/>
							<TextBox 
								Text="{Binding MustContain}"
								Grid.Column="1"
								Grid.Row="0"
								Name="MustContainTextBox"
								Classes="MustContainRow"
								x:Name="MustContainTextBox"/>
							<Label 
								Grid.Column="0" 
								Grid.Row="1" 
								Content="Must not contain" 
								Target="MustNotContainTextBox" 
								VerticalAlignment="Center" 
								Classes="MustNotContainRow"/>
							<TextBox 
								Grid.Column="1"
								Grid.Row="1"
								Text="{Binding MustNotContain}"
								x:Name="MustNotContainTextBox"
								Classes="MustNotContainRow"/>

							<Label 
								Grid.Column="0" 
								Grid.Row="2"
								Content="Episode filter" 
								Target="EpisodeFilterTextBox"
								VerticalAlignment="Center" 
								Classes="EpisodeFilterRow" />
							<Grid Grid.Column="1" Grid.Row="2" ColumnDefinitions="* auto">
								<TextBox x:Name="EpisodeFilterTextBox" Text="{Binding EpisodeFilter}" Classes="EpisodeFilterRow"/>
								<!-- The panel provides vertical alignment for when errors show up and are displayed under the previous textbox -->
								<Panel Grid.Column="1" VerticalAlignment="Top">									
									<CheckBox
										Margin="4"
										IsChecked="{Binding SmartFilter}"
										x:Name="SmartFilterCheckBox"
										Content="Use smart filter"
										HorizontalAlignment="Left"/>
								</Panel>
							</Grid>
						</Grid>
					</HeaderedContentControl>

					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<Border Classes="Header">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="auto" />
										<ColumnDefinition Width="auto" SharedSizeGroup="H"/>
									</Grid.ColumnDefinitions>
									<TextBlock Classes="ContentHeader">Add &amp; save settings</TextBlock>
									<Border Grid.Column="1" Classes="Divider"/>
									<ToggleSwitch
										Grid.Column="3"
										x:Name="AddPausedComboBox"
										IsChecked="{Binding AddPaused}"
										FontWeight="Normal"
										HorizontalAlignment="Right"
										OnContent="Add paused"
										OffContent="Add paused"/>
								</Grid>
							</Border>
						</HeaderedContentControl.Header>
						<Grid RowDefinitions="auto auto auto auto auto auto auto" Classes="HLayout">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="auto" SharedSizeGroup="L"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Label Grid.Column="0" Grid.Row="0" Content="Assign category" Target="{Binding #CategoryComboBox}"/>
							<ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Categories}" HorizontalAlignment="Stretch" x:Name="CategoryComboBox"/>

							<Label Grid.Column="0" Grid.Row="1" Content="Add tags" Target="{Binding #TagsTextBox}" />
							<TextBox Grid.Column="1" Grid.Row="1" Text="" x:Name="TagsTextBox"/>

							<Label Grid.Column="0" Grid.Row="2" ToolTip.Tip="Torrent Content Layout" Content="TCL" Target="{Binding #ContentLayoutComboBox}" />
							<ComboBox Grid.Column="1" Grid.Row="2" HorizontalAlignment="Stretch" x:Name="ContentLayoutComboBox">
								<ComboBoxItem>Use global settings</ComboBoxItem>
								<ComboBoxItem>Original</ComboBoxItem>
								<ComboBoxItem>Create subfolder</ComboBoxItem>
								<ComboBoxItem>Don't create subfolder</ComboBoxItem>
							</ComboBox>

							<StackPanel Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="4" Margin="4 4 4 0">
								<Grid Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2" ColumnDefinitions="* auto" DockPanel.Dock="Bottom" x:Name="IgnoreMatchesStackPanel">
									<Label VerticalAlignment="Center" HorizontalAlignment="Right" Content="Ignore subsequent matches for " Target="{Binding #SubsequentDays}" />
									<Panel Grid.Column="1" Margin="0 0 -3 0">
										<NumericUpDown x:Name="SubsequentDays" VerticalAlignment="Center" Width="140" Increment="1" TextAlignment="Right" Value="0" Minimum="0" Maximum="999" Padding="0 6 40 0"/>
										<TextBlock Text="days" Opacity="0.5" Margin="35 10 0 10"/>
									</Panel>
								</Grid>
							</StackPanel>

							<DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5">
								<CheckBox
										Margin="4 0 0 0"
										HorizontalAlignment="Stretch"
										FontWeight="Normal"
										x:Name="SaveToDifferentDirectoryCheckBox"
										IsChecked="{Binding SavePath, Converter={StaticResource StringNotEmptyToBoolConverter}}">
								</CheckBox>
								<TextBox
									Margin="0 4 0 4"
									IsEnabled="{Binding #SaveToDifferentDirectoryCheckBox.IsChecked}"
									Text="{Binding SavePath}"
									Watermark="path to save to"/>
							</DockPanel>

						</Grid>
					</HeaderedContentControl>
				</StackPanel>
			</ScrollViewer>
		</Border>

		<Grid Grid.Row="1" RowDefinitions="* auto" DockPanel.Dock="Bottom">
			<Border 
				BorderBrush="{DynamicResource SystemAccentColorDark3}" 
				BorderThickness="0 1 0 1"
				Padding="8 4">
					<DockPanel>
						<!-- Assigned a click event in RssRulesView -->
						<Button 
							x:Name="DeleteButton"
							Classes="Delete" 
							IsVisible="{Binding !IsNew}" 
							Width="{Binding #SaveButton.Bounds.Width}"
							Height="{Binding #SaveButton.Bounds.Height}"
							Foreground="{Binding #SaveButton.Foreground}">
							<ToolTip.Tip>
								<StackPanel Classes="HotKeyedToolTip">
									<TextBlock>Delete this rule</TextBlock>
									<TextBlock Text="Hotkey: Delete"/>
								</StackPanel>
							</ToolTip.Tip>
							<TextBlock Text="Delete"/>
						</Button>
						<!-- Hotkey is set in the code behind as it should only trigger when the combobox or datagrid has focus -->
						<Button
							x:Name="SaveButton"
							Margin="0"
							Classes="MainButton accent"
							HorizontalAlignment="Right"
							Command="{Binding SaveCommand}">
							<StackPanel>
								<TextBlock IsVisible="{Binding !IsNew}" Text="Save existing rule"/>
								<TextBlock IsVisible="{Binding IsNew}" Text="Save new rule"/>
							</StackPanel>
						</Button>
					</DockPanel>
			</Border>
		</Grid>
	</Grid>

</UserControl>
