<Window xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d" d:DesignWidth="900" d:DesignHeight="792"
	MinWidth="100" MinHeight="792"
	Width="900" Height="792"
  xmlns:vm="using:qBittorrentCompanion.ViewModels"
	x:DataType="vm:LocalSettingsWindowViewModel"
  x:Class="qBittorrentCompanion.Views.LocalSettingsWindow"
	WindowStartupLocation="CenterOwner"
  Title="Settings (local) - qBittorrent Companion"
	TransparencyLevelHint="AcrylicBlur"
	Background="Transparent"
	xmlns:converters="clr-namespace:qBittorrentCompanion.Converters"
	xmlns:help="clr-namespace:qBittorrentCompanion.Helpers;assembly=qBittorrentCompanion"
	ExtendClientAreaToDecorationsHint="True"
	Focusable="True"
	xmlns:ic="using:FluentIcons.Avalonia"
	xmlns:views="clr-namespace:qBittorrentCompanion.Views">
	<Window.Styles>
		<StyleInclude Source="/Styles/PreferencesStyles.axaml"/>
	</Window.Styles>
	<Window.Resources>
		<converters:ColorToHexConverter x:Key="ColorToHexConverter" />
	</Window.Resources>
	<Window.Styles>
		<Style Selector="NumericUpDown#ValuePreviewNumericUpDown">
			<Setter Property="Template">
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0">
						<TextBox Name="PART_TextBox" Text="{TemplateBinding Text}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter>
		</Style>
	</Window.Styles>
	<DockPanel Margin="10">
		<DockPanel DockPanel.Dock="Top" Classes="TitleTextBlock" Margin="220 0 0 0">
			<ic:SymbolIcon Symbol="{Binding SelectedTabSymbol}" VerticalAlignment="Center" RenderTransform="ScaleX(1.8) ScaleY(1.8)" />
			<TextBlock Text="{Binding SelectedTabTitle}" FontSize="30" Margin="12 8 8 8"/>
		</DockPanel>
		
		<TabControl
			DockPanel.Dock="Top"
			Grid.Row="1"
			x:Name="LocalSettingsTabControl"
			TabStripPlacement="Left"
			SelectedIndex="{Binding SelectedTabIndex}">

			<TabItem>
				<TabItem.Header>
					<DockPanel>
						<ic:SymbolIcon Symbol="{Binding TabSymbols[0]}" />
						<TextBlock Text="{Binding TabTitles[0]}"/>
					</DockPanel>
				</TabItem.Header>
				<StackPanel>

					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<Border Classes="SectionTop">
								<StackPanel Classes="SectionTitle">
									<DockPanel>
										<StackPanel Orientation="Horizontal">
											<ic:SymbolIcon Symbol="DocumentArrowUp" VerticalAlignment="Top" RenderTransform="ScaleX(1.4) ScaleY(1.4)" Margin="0 0 4 -8"/>
											<TextBlock Classes="SectionTitleMain" Text="Launch files from qBittorrent Companion"/>
										</StackPanel>
										<ToggleSwitch VerticalAlignment="Top" x:Name="LogFileToggleSwitch">
											<ToggleSwitch.IsChecked>
												<MultiBinding Converter="{x:Static BoolConverters.Or}">
													<Binding ElementName="DownloadDirectoryTextBox" Path="Text" Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
													<Binding ElementName="TemporaryDirectoryTextBox" Path="Text" Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
												</MultiBinding>
											</ToggleSwitch.IsChecked>
										</ToggleSwitch>
									</DockPanel>
								</StackPanel>
							</Border>
						</HeaderedContentControl.Header>

						<Border Classes="SectionBottom">
							<Grid IsVisible="{Binding #LogFileToggleSwitch.IsChecked}" ColumnDefinitions="* 4 auto" RowDefinitions="auto auto auto auto">
								<TextBlock Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Classes="SectionTitleDescription" TextWrapping="Wrap">For this to work the files do need to be available on this system (for example through a windows network share or NFS). If they are, specify the directories below and you can launch files straight from qBittorrent Companion.</TextBlock>
									
								<TextBox Grid.Column="0" Grid.Row="1" x:Name="DownloadDirectoryTextBox" Watermark="Download directory, for example W:\Downloads\"/>
								<Button Grid.Column="2" Grid.Row="1" Click="DownloadDirectoryButton_Click">
									<StackPanel Orientation="Horizontal" Spacing="4">
										<ic:SymbolIcon Symbol="FolderArrowUp"/>
										<TextBlock Text="Downloads"/>
									</StackPanel>
								</Button>

								<Separator Grid.ColumnSpan="3" Grid.Row="2"/>

								<TextBox Grid.Column="0" Grid.Row="3" x:Name="TemporaryDirectoryTextBox" Watermark="Temporary files directory, for example W:\Temporary\"/>
								<Button Grid.Column="2" Grid.Row="3" Click="TemporaryDirectoryButton_Click">
									<StackPanel Orientation="Horizontal" Spacing="4">
										<ic:SymbolIcon Symbol="FolderLightning"/>
										<TextBlock Text="Temporary"/>
									</StackPanel>
								</Button>
							</Grid>
						</Border>
					</HeaderedContentControl>

					<HeaderedContentControl>
						<HeaderedContentControl.Header>
							<Border Classes="SectionTop">
								<StackPanel Classes="SectionTitle">
									<DockPanel>
										<Panel Margin="0 0 4 0">
											<ic:SymbolIcon Symbol="Folder" VerticalAlignment="Top" RenderTransform="ScaleX(1.4) ScaleY(1.4)" Margin="0 4 4 0"/>
											<ic:SymbolIcon Symbol="Eye" IconVariant="Filled" Margin="0 7 0 0"/>
										</Panel>
										<TextBlock Classes="SectionTitleMain" Text="Monitor directory for .torrent files"/>
									</DockPanel>
								</StackPanel>
							</Border>
						</HeaderedContentControl.Header>

						<Border Classes="SectionBottom">
							<StackPanel>
								<TextBlock Classes="SectionTitleDescription" TextWrapping="Wrap">
									<Run Text="Add one or more directories to monitor for .torrent files."/>
									<LineBreak/>
									<Run Text="When a .torrent file is detected, it will be added to your downloads automatically."/>
									<LineBreak/>
									<Run Text="You can then choose what to do with the original file: delete it, move it, or rename it to .dl."/>
								</TextBlock>
								<DataGrid x:Name="Moni">
									<DataGrid.RowDetailsTemplate>
										<DataTemplate x:DataType="">
											<Button>dd</Button>
										</DataTemplate>
									</DataGrid.RowDetailsTemplate>
									<DataGrid.Columns>
										<DataGridTextColumn Header="Folder" Width="*"/>
										<DataGridTemplateColumn Header="Added action">
											<DataTemplate>
												<ComboBox>
													<ComboBoxItem Content="delete file"/>
													<ComboBoxItem Content="rename to .dl"/>
													<ComboBoxItem Content="move to"/>
												</ComboBox>
											</DataTemplate>
										</DataGridTemplateColumn>
									</DataGrid.Columns>
								</DataGrid>
								<Panel Background="{DynamicResource DataGridColumnHeaderBackgroundBrush}">
									<TextBlock Text="no directories have been added yet" Margin="4" HorizontalAlignment="Center" Foreground="{DynamicResource DataGridColumnHeaderForegroundBrush}" Opacity="0.6" />
								</Panel>
								<Button HorizontalAlignment="Right" Margin="0 8 0 0">
									<StackPanel Orientation="Horizontal">
										<ic:SymbolIcon Symbol="FolderAdd"/>
										<TextBlock Text="Add folder"/>
									</StackPanel>
								</Button>
							</StackPanel>
						</Border>
					</HeaderedContentControl>
				</StackPanel>
			</TabItem>

			<TabItem>
				<TabItem.Header>
					<DockPanel>
						<ic:SymbolIcon Symbol="{Binding TabSymbols[1]}" />
						<TextBlock Text="{Binding TabTitles[1]}"/>
					</DockPanel>
				</TabItem.Header>
				<StackPanel>
					<Grid ColumnDefinitions="auto * auto * auto auto" Margin="16 24 16 0" RowDefinitions="auto auto">
						<Grid.Styles>
							<Style Selector="StackPanel">
								<Setter Property="Margin" Value="8 4"/>
							</Style>
							<Style Selector="TextBlock">
								<Setter Property="FontSize" Value="12"/>
								<Setter Property="Opacity" Value="0.6"/>
							</Style>
							<Style Selector="StackPanel>TextBlock:nth-child(1)">
								<Setter Property="FontWeight" Value="Bold"/>
							</Style>
						</Grid.Styles>

						<Panel Grid.Column="0" Grid.Row="0" x:Name="Preview32Panel" VerticalAlignment="Center">
							<Svg Path="/Assets/qbc-logo.svg" Width="32" Height="32" Margin="8" x:Name="Preview32Svg"/>
						</Panel>
						<StackPanel Grid.Column="1" Grid.Row="0">
							<TextBlock Text="32px"/>
							<TextBlock Text="Start pins"/>
						</StackPanel>

						<Panel Grid.Column="2" Grid.Row="0" x:Name="Preview24Panel" VerticalAlignment="Center">
							<Svg Path="/Assets/qbc-logo.svg" Width="24" Height="24" Margin="8" x:Name="Preview24Svg"/>
						</Panel>
						<StackPanel Grid.Column="3" Grid.Row="0">
							<TextBlock Text="24px"/>
							<TextBlock Text="Search results"/>
							<TextBlock Text="Start all list"/>
							<TextBlock Text="Task bar"/>
						</StackPanel>

						<Panel Grid.Column="4" Grid.Row="0" x:Name="Preview16Panel" VerticalAlignment="Center">
							<Svg Path="/Assets/qbc-logo.svg" Width="16" Height="16" Margin="8" x:Name="Preview16Svg"/>
						</Panel>
						<StackPanel Grid.Column="5" Grid.Row="0">
							<TextBlock Text="16px"/>
							<TextBlock Text="Task manager"/>
							<TextBlock Text="Context menu"/>
							<TextBlock Text="System tray"/>
							<TextBlock Text="Title bar"/>
						</StackPanel>

						<Border Grid.Column="0" Grid.ColumnSpan="6" Grid.Row="1" IsVisible="False">
							<StackPanel>
								<DockPanel HorizontalAlignment="Center">
									<ic:SymbolIcon Symbol="Info" Opacity="0.6"/>
									<TextBlock Text="Preview icons above are based on Windows. Linux could be using anything anywhere."/>
								</DockPanel>
							</StackPanel>
						</Border>
					</Grid>

					<HeaderedContentControl DockPanel.Dock="Top">
						<HeaderedContentControl.Header>
							<Border Classes="SectionTop">
								<Grid Classes="SectionTitle" ColumnDefinitions="auto * auto" RowDefinitions="auto auto">
									<ic:SymbolIcon Grid.Column="0" Grid.Row="0" Symbol="PaintBucket" RenderTransform="ScaleX(1.4) ScaleY(1.4)" Margin="0 4 16 0"/>
									<TextBlock Grid.Column="1" Grid.Row="0" Classes="SectionTitleMain" Text="Customize qBittorrent Companion icon colors"/>
									<DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" >
										<TextBlock Classes="SectionTitleDescription" Text="Unsatisfied with qBittorrent Companions icon? Create your own variant."/>
									</DockPanel>
									
									<StackPanel Grid.Column="2" Grid.Row="0" Margin="0 0 0 0">
										<Label Target="CustomPreviewBgColorCheckBox" FontWeight="Normal">
											<TextBlock FontSize="10" HorizontalAlignment="Center">
												<Run Text="preview on this"/>
												<LineBreak/>
												<Run Text="background color"/>
											</TextBlock>
										</Label>
									</StackPanel>

									<ColorPicker Grid.Column="2" Grid.Row="1" x:Name="PreviewBgColorPicker" ColorChanged="PreviewBgColorPicker_ColorChanged"/>
								</Grid>
							</Border>
						</HeaderedContentControl.Header>

						<StackPanel>
							<Border Classes="SectionBottom">
								<StackPanel>
									<Grid ColumnDefinitions="auto, *" RowDefinitions="*" Margin="0 8">
										<Panel Grid.Column="0" Margin="0 0 0 0" VerticalAlignment="Center">
											<Panel.Styles>
												<Style Selector="Label">
													<Setter Property="Width" Value="90"/>
													<Setter Property="MinHeight" Value="30"/>
												</Style>
												<Style Selector="Canvas>Border>StackPanel">
													<Setter Property="Orientation" Value="Horizontal"/>
													<Setter Property="Spacing" Value="4"/>
												</Style>
												<Style Selector="Canvas>Border">
													<Setter Property="Background" Value="{DynamicResource SystemChromeMediumColor}"/>
													<Setter Property="Padding" Value="2"/>
													<Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
													<Setter Property="BorderThickness" Value="1"/>
												</Style>
												<Style Selector="TextBox">
													<Setter Property="Margin" Value="0 0 4 0"/>
													<Setter Property="MinHeight" Value="26"/>
													<Setter Property="VerticalAlignment" Value="Center"/>
													<Setter Property="VerticalContentAlignment" Value="Center"/>
													<Setter Property="Padding" Value="4"/>
													<Setter Property="FontFamily" Value="Lucida Console, Ubuntu Mono, Liberation Mono, Menlo"/>
												</Style>
												<Style Selector="Path.PointerPath">
													<Setter Property="StrokeThickness" Value="4"/>
													<Setter Property="Stroke" Value="{DynamicResource SystemChromeLowColor}"/>
												</Style>
												<Style Selector="Path.OutlinePointerPath">
													<Setter Property="StrokeThickness" Value="8"/>
													<Setter Property="Stroke" Value="{DynamicResource SystemAccentColor}"/>
												</Style>
											</Panel.Styles>
											<Canvas x:Name="LogoCanvas" Height="272" Width="606">

												<!--<SKCanvasControl Canvas.Left="350" x:Name="Preview256SKCanvasControl" Width="256" Height="256" />-->
												<Border x:Name="LargePreviewBorder" Canvas.Left="350" Canvas.Top="8" Padding="0">
													<Svg Path="/Assets/qbc-logo.svg"  x:Name="Preview256Svg" />
												</Border>
												<Border>
													<StackPanel>
														<Label Target="Q_ColorPicker">q letter</Label>
														<ColorPicker x:Name="Q_ColorPicker" ColorChanged="ColorPicker_ColorChanged"/>
														<TextBox Text="{Binding #Q_ColorPicker.Color, Converter={StaticResource ColorToHexConverter}}"/>
													</StackPanel>
												</Border>
												<Path Classes="OutlinePointerPath" Data="{Binding #QB_ConnectorPath.Data}" />
												<Path Classes="PointerPath" x:Name="QB_ConnectorPath"
													Data="
														M 258,20 
														h 70
														l 118,110
														m -6,-2
														a 4,4 0 1,0 8,0
														a 4,4 0 1,0 -8,0
												"/>

												<Border Canvas.Top="39" >
													<StackPanel>
														<Label Target="B_ColorPicker">b letter</Label>
														<ColorPicker x:Name="B_ColorPicker" ColorChanged="ColorPicker_ColorChanged"/>
														<TextBox Text="{Binding #B_ColorPicker.Color, Converter={StaticResource ColorToHexConverter}}"/>
													</StackPanel>
												</Border>
												<Path Classes="OutlinePointerPath" Data="{Binding #B_ConnectorPath.Data}" />
												<Path Classes="PointerPath" x:Name="B_ConnectorPath"
													Data="
														M 258,58 
														h 170
														m -8,0
														a 4,4 0 1,0 8,0
														a 4,4 0 1,0 -8,0
												"/>

												<Border Canvas.Top="86">
													<StackPanel>
														<Label MinHeight="{Binding}" Target="C_ColorPicker">C Shape</Label>
														<ColorPicker HorizontalAlignment="Right" x:Name="C_ColorPicker" ColorChanged="ColorPicker_ColorChanged"/>
														<TextBox Text="{Binding #C_ColorPicker.Color, Converter={StaticResource ColorToHexConverter}}"/>
													</StackPanel>
												</Border>
												<Path Classes="OutlinePointerPath" Data="{Binding #C_ConnectorPath.Data}"/>
												<Path Classes="PointerPath" x:Name="C_ConnectorPath"
													Data="
													M 258,105 
													h 111
													m -8,0
													a 4,4 0 1,0 8,0
													a 4,4 0 1,0 -8,0
												"/>

												<Button Click="RestoreDefaultIconButton_Click" Classes="Stealth" Canvas.Left="0" Canvas.Top="226">
													<ic:SymbolIcon Symbol="ArrowReset"/>
												</Button>

												<Border Canvas.Top="133">
													<Grid ColumnDefinitions="94 auto 4 auto auto" Margin="0 4" RowDefinitions="auto auto 4 auto 4 auto">
														<TextBlock Grid.Column="0" Grid.ColumnSpan="5" Opacity="0.6" TextAlignment="Center" FontSize="10" Margin="0 0 0 8">Background gradient</TextBlock>
														<Label Grid.Column="0" Grid.Row="1" Target="g1_ColorPicker">Outer rim</Label>
														<ColorPicker Grid.Column="1" Grid.Row="1" x:Name="g1_ColorPicker" ColorChanged="ColorPicker_ColorChanged"/>
														<TextBox Grid.Column="3" Grid.Row="1" Text="{Binding #g1_ColorPicker.Color, Converter={StaticResource ColorToHexConverter}}"/>

														<Label Grid.Column="0" Grid.Row="3" Target="g1_ColorPicker">Center</Label>
														<ColorPicker Grid.Column="1" Grid.Row="3" x:Name="g2_ColorPicker" ColorChanged="ColorPicker_ColorChanged"/>
														<TextBox Grid.Column="3" Grid.Row="3" Text="{Binding #g2_ColorPicker.Color, Converter={StaticResource ColorToHexConverter}}"/>

														<Label Grid.Column="0" Grid.Row="5" Target="g1_ColorPicker">Fill</Label>
														<ColorPicker Grid.Column="1" Grid.Row="5" x:Name="g3_ColorPicker" ColorChanged="ColorPicker_ColorChanged"/>
														<TextBox Grid.Column="3" Grid.Row="5" Text="{Binding #g3_ColorPicker.Color, Converter={StaticResource ColorToHexConverter}}"/>
													</Grid>
												</Border>
												<Path Classes="OutlinePointerPath" Data="{Binding #BG_ConnectorPath.Data}"/>
												<Path Classes="PointerPath" x:Name="BG_ConnectorPath"
													Data="
														M 258,223 h 190
														m -8,0
														a 4,4 0 1,0 8,0
														a 4,4 0 1,0 -8,0
														M 200,220
														m -24,0
												"/>
											</Canvas>
										</Panel>
									</Grid>
									<Separator/>
									<Grid ColumnDefinitions="129 129 * 258" Margin="0 10 -3 0">
										<SplitButton HorizontalAlignment="Stretch">
											<StackPanel Orientation="Horizontal" Spacing="4">
												<ic:SymbolIcon Symbol="Folder"></ic:SymbolIcon>
												<TextBlock Text="Import"/>
											</StackPanel>
											<SplitButton.Flyout>
												<MenuFlyout Placement="BottomEdgeAlignedLeft">
													<MenuItem Header="Restore light mode default" Click="RestoreLightModeMenuItem_Click">
														<MenuItem.Icon><ic:SymbolIcon Symbol="Lightbulb"/></MenuItem.Icon>
													</MenuItem>
													<MenuItem Header="Restore dark mode default" Click="RestoreDarkModeMenuItem_Click">
														<MenuItem.Icon><ic:SymbolIcon Symbol="Glasses" IconVariant="Filled" /></MenuItem.Icon>
													</MenuItem>
												</MenuFlyout>
											</SplitButton.Flyout>
										</SplitButton>
										<Button Grid.Column="1" Margin="8 0 0 0" HorizontalAlignment="Stretch"
												ToolTip.Tip="Exports the colors to a file as a backup. You could also send your color combo file to others to import.">
											<DockPanel HorizontalSpacing="4" HorizontalAlignment="Right">
												<ic:SymbolIcon Symbol="Save" DockPanel.Dock="Right"/>
												<TextBlock Text="Export" DockPanel.Dock="Left"/>
											</DockPanel>
										</Button>
										<!-- Column 2 is used as empty space -->
										<SplitButton Grid.Column="3" Classes="MainButton" x:Name="SaveIconSplitButton" Click="SaveAndApplyIconSplitButton_Click" Margin="0">
											<ToolTip.Tip>
												<StackPanel Spacing="4">
													<TextBlock Text="{Binding ThemeMode, StringFormat='{}Creates a new {0} mode icon and applies it to all open QBC windows.'}}"/>
													<TextBlock Text="The color combination will be the new default and it's saved as a .json file under /IconColors/"/>
												</StackPanel>
											</ToolTip.Tip>
											<DockPanel>
												<TextBlock Text="Save &amp; Apply"/>
											</DockPanel>
											<SplitButton.Flyout>
												<MenuFlyout Placement="BottomEdgeAlignedRight">
													<MenuItem Header="{Binding OppositeMode, StringFormat='{}Save for {0} mode'}"/>
												</MenuFlyout>
											</SplitButton.Flyout>
										</SplitButton>
									</Grid>
									<Separator/>
									<DockPanel Opacity="0.6" HorizontalAlignment="Left" HorizontalSpacing="4">
										<ic:SymbolIcon Symbol="Info" VerticalAlignment="Center"/>
										<TextBlock TextWrapping="Wrap">
											<Run Text="{Binding ThemeMode, StringFormat='{}Currently using {0} mode. Save &amp; Apply will set a new default icon for that.'}"/>
											<LineBreak/>
											<Run Text="{Binding OppositeMode, StringFormat='{}Want to save for {0} mode instead? Use the dropdown option instead.'}"/>
										</TextBlock>
									</DockPanel>
								</StackPanel>
							</Border>
						</StackPanel>
					</HeaderedContentControl>

					<Grid Background="LightBlue" Margin="16 0" ColumnDefinitions="auto *">
						<ic:SymbolIcon Symbol="Info" Margin="16" VerticalAlignment="Center"/>
						<TextBlock Grid.Column="1" Text="" TextWrapping="Wrap">
							<Run Text="If a lick of paint isn't enough for you, you can 'trick' QBC into using any icon:"/>
							<LineBreak/>
							<Run Text=" 1) Create a colored variant above &amp; save it"/>
							<LineBreak/>
							<Run Text=" 2) Open QBC's icon folder"/>
							<LineBreak/>
							<Run Text=" 3) Overwrite the variant with any icon you want &amp; restart QBC"/>
						</TextBlock>
					</Grid>
				</StackPanel>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<DockPanel>
						<ic:SymbolIcon Symbol="{Binding TabSymbols[2]}" />
						<TextBlock Text="{Binding TabTitles[2]}"/>
					</DockPanel>
				</TabItem.Header>
				<TextBlock>To be implemented</TextBlock>
			</TabItem>
			<TabItem>
				<TabItem.Header>
					<DockPanel>
						<ic:SymbolIcon Symbol="{Binding TabSymbols[3]}" />
						<TextBlock Text="{Binding TabTitles[3]}"/>
					</DockPanel>
				</TabItem.Header>
				<TextBlock>To be implemented</TextBlock>
			</TabItem>
		</TabControl>

		<Button DockPanel.Dock="Bottom" 
			VerticalAlignment="Bottom" 
			HorizontalAlignment="Right" 
			HorizontalContentAlignment="Center"
			Click="CloseButton_Click"
			IsCancel="True">
			Close window
		</Button>
	</DockPanel>
</Window>
