<Window xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vm="using:qBittorrentCompanion.ViewModels"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d" d:DesignWidth="1150" d:DesignHeight="820"
	MinWidth="800" MinHeight="335"
  x:Class="qBittorrentCompanion.Views.MainWindow"
  x:DataType="vm:MainWindowViewModel"
  Title="qBittorrentCompanion"
				
	DragDrop.AllowDrop="True"
	ExtendClientAreaToDecorationsHint="True"
				
	xmlns:qb="clr-namespace:QBittorrent.Client;assembly=QBittorrent.Client"
	xmlns:serv="clr-namespace:qBittorrentCompanion.Services;assembly=qBittorrentCompanion"
	xmlns:ic="using:FluentIcons.Avalonia"
	xmlns:controls="clr-namespace:Avalonia.Notification.Controls;assembly=Notifica tion.Avalonia"
	xmlns:cc="clr-namespace:qBittorrentCompanion.CustomControls"
	xmlns:views="clr-namespace:qBittorrentCompanion.Views"
	xmlns:ext="clr-namespace:qBittorrentCompanion.Extensions"
	xmlns:converters="clr-namespace:qBittorrentCompanion.Converters"
	>

	<Window.Resources>
		<converters:HttpStatusCodeToMessageConverter x:Key="HttpStatusCodeToMessageConverter" />
		<converters:LogLevelToIconConverter x:Key="LogLevelToIconConverter" />
		<!--FlyoutPresenterClasses is manipulated in the code behind adding .StatusBar-->
		<Flyout x:Key="TransfersFlyout" Placement="TopEdgeAlignedRight">
			<DockPanel Opacity="1" Width="630" Margin="-8 0">
				<DockPanel.Styles>
					<Style Selector="TextBlock">
						<Setter Property="VerticalAlignment" Value="Center"/>
					</Style>
					<Style Selector="ic|SymbolIcon">
						<Setter Property="VerticalAlignment" Value="Center"/>
					</Style>
					<Style Selector="Button">
						<Setter Property="HorizontalAlignment" Value="Center"/>
						<Setter Property="Width" Value="64"/>
						<Setter Property="HorizontalContentAlignment" Value="Center"/>
					</Style>
				</DockPanel.Styles>
				<DockPanel DataContext="{Binding ServerStateVm}">
					<DockPanel DockPanel.Dock="Top" Margin="0 -8">
						<TextBlock Text="Legend: "/>
						<ic:SymbolIcon Symbol="Square" IconVariant="Filled" Foreground="{DynamicResource SystemAccentColor}"/>
						<TextBlock Text="= Download, "/>
						<ic:SymbolIcon Symbol="Square" IconVariant="Filled" Foreground="{DynamicResource SystemErrorTextColor}"/>
						<TextBlock Text="= Upload"/>
						<ComboBox
							DockPanel.Dock="Right"
							HorizontalAlignment="Right"
							ItemsSource="{Binding SizeOptions}"
							SelectedItem="{Binding ShowLineGraphSizeAs}"
							Theme="{StaticResource DataGridComboBox}"
							x:Name="UploadLimitComboBox"/>
					</DockPanel>

					<Separator DockPanel.Dock="Top" Margin="-24 8 -24 12"/>

					<cc:LineGraph
							HorizontalAlignment="Stretch"
							DockPanel.Dock="Top"
							MinHeight="420"
							Width="604"
							Values="{Binding DlInfoSpeedDataY}"
							SecondValues="{Binding UpInfoSpeedDataY}"
							TopLimit="{Binding DlRateLimit}"
							FormatSizeAs="{Binding ShowLineGraphSizeAs}"
							SecondLineColor="{DynamicResource SystemErrorTextColor}"
							/>

					<Separator DockPanel.Dock="Top" Margin="-24 12 -24 4"/>

					<Grid ColumnDefinitions="* auto *" DockPanel.Dock="Top">
						<Grid Grid.Column="0" ColumnDefinitions="*, auto" RowDefinitions="auto 4 auto">
							<Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Left">Limit download speed to</Label>
							<Button Grid.Column="1" Grid.Row="0" Command="{Binding SaveDisplayDlRateLimitCommand}">Save</Button>
							<NumericUpDown Grid.Column="0" Grid.Row="2" Value="{Binding DisplayDlRateLimit}"/>
							<ComboBox
								Grid.Column="1"
								Grid.Row="2"
								DockPanel.Dock="Right"
								VerticalAlignment="Center"
								ItemsSource="{Binding SizeOptions}"
								SelectedItem="{Binding ShowDlSizeAs}"
								Theme="{StaticResource DataGridComboBox}"
								x:Name="DownloadLimitComboBox"
								Margin="0 0 -8 0" />
						</Grid>
						<Border
							Grid.Column="1"
							Background="{DynamicResource SystemControlBackgroundBaseLowBrush}"
							Width="1"
							Height="71"
							Margin="12 -2 6 -18"
							/>
						<Grid Grid.Column="2" ColumnDefinitions="*, auto" RowDefinitions="auto 4 auto">
							<Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" HorizontalAlignment="Left">Limit upload speed to</Label>
							<Button Grid.Column="1" Grid.Row="0" Command="{Binding SaveDisplayUpRateLimitCommand}">Save</Button>
							<NumericUpDown Grid.Column="0" Grid.Row="2" Value="{Binding DisplayUpRateLimit}" />
							<ComboBox
								Grid.Column="1"
								Grid.Row="2"
								DockPanel.Dock="Right"
								VerticalAlignment="Center"
								ItemsSource="{Binding SizeOptions}"
								SelectedItem="{Binding ShowUpSizeAs}"
								Theme="{StaticResource DataGridComboBox}"/>
						</Grid>
					</Grid>

				</DockPanel>
			</DockPanel>
		</Flyout>
	</Window.Resources>
	<Window.Styles>
		<Style Selector="TabControl">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="StackPanel#LeftPane Expander">
			<Setter Property="Padding" Value="0"/>
		</Style>
		<Style Selector="StackPanel#LeftPane Expander.Content TextBlock">
			<Setter Property="TextWrapping" Value="WrapWithOverflow"/>
		</Style>

		<Style Selector="Expander">
			<Setter Property="CornerRadius" Value="0"/>
		</Style>
		<Style Selector="StackPanel#LeftPane Border#ToggleButtonBackground">
			<Setter Property="BorderThickness" Value="5, 0, 0, 0"/>
		</Style>
		<Style Selector="Panel#StatusPanel">
			<Setter Property="Background" Value="{DynamicResource ThemeAccentBrush1}"/>
		</Style>
		<Style Selector="StackPanel#LeftPane DockPanel TextBlock">
			<Setter Property="FontFamily" Value="Inconsolata, Consolas, Monospace, Courier"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
		</Style>
		<Style Selector="TabItem>DataGrid">
			<Setter Property="Margin" Value="0 10"/>
		</Style>
		<Style Selector="TextBlock.Title">
			<Setter Property="FontSize" Value="24"/>
			<Setter Property="Margin" Value="0 0 0 10"/>
		</Style>
		<Style Selector="Expander /template/ ToggleButton#PART_ToggleButton">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		</Style>
		<!--Functions as a vertical separator-->
		<Style Selector="Grid#StatusBarGrid>Grid>Border, Grid#StatusBarGrid>Grid>ToggleButton>Grid>Border">
			<Setter Property="Width" Value="1"/>
			<Setter Property="Margin" Value="10 0"/>
			<Setter Property="Background" Value="{DynamicResource SystemControlBackgroundBaseLowBrush}"/>
		</Style>
		<Style Selector="Grid#StatusBarGrid">
			<Setter Property="Background" Value="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
			<Setter Property="MinHeight" Value="28"/>
		</Style>
		<Style Selector="Grid#StatusBarGrid StackPanel, Grid#StatusBarGrid TextBlock">
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>

		<Style Selector="FlyoutPresenter.Stretch">
			<Setter Property="MaxWidth" Value="Infinity" />
		</Style>
		<Style Selector="FlyoutPresenter.StatusBar">
			<Setter Property="CornerRadius" Value="8 8 0 0"/>
			<Setter Property="BorderBrush" Value="{DynamicResource SystemControlBackgroundBaseLowBrush}"/>
			<Setter Property="Background" Value="{DynamicResource SystemChromeMediumColor}"/>
			<Setter Property="BorderThickness" Value="1 1 1 0"/>
		</Style>
		<Style Selector="FlyoutPresenter.StatusBar NumericUpDown">
			<Setter Property="Padding" Value="6 6 40 6"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
		</Style>
		<Style Selector="FlyoutPresenter.StatusBar Label">
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Padding" Value="0"/>
		</Style>
	</Window.Styles>

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<Border Classes="FakeWindowBorder" x:Name="FakeWindowBorder">
		<Grid RowDefinitions="auto, *" Background="{DynamicResource SystemAltMediumColor}" x:Name="BaseGrid">
			<Grid Grid.Row="0" Classes="FakeWindowTitleBackground"/>
			<Grid RowDefinitions="28" x:Name="FakeTitleBarGrid" PointerPressed="Grid_PointerPressed" DoubleTapped="TitleBarGrid_DoubleTapped">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="auto"/>
					<ColumnDefinition Width="auto"/>
				</Grid.ColumnDefinitions>

				<!-- Technically background is set for pressed behaviour, not the color -->
				<Grid Grid.Column="0" ColumnDefinitions="auto *" x:Name="FakeTitleGrid" Background="{DynamicResource SystemAccentColor}" Margin="0 2 0 0">
					<Viewbox Grid.Column="0" Margin="4"  x:Name="WindowIconViewBox"/>
					<TextBlock
						Grid.Column="1"
						Padding="4 0 4 0"
						HorizontalAlignment="Stretch"
						VerticalAlignment="Center">qBittorrent Companion</TextBlock>
				</Grid>

				<TabStrip
					x:Name="MainTabStrip"
					Classes="FakeTitleTabStrip"
					Grid.Column="1"
					Margin="0 0 8 0"
					Background="Transparent"
					SelectionChanged="TabStrip_SelectionChanged"
					SelectedIndex="0">
					<TabStrip.Styles>
						<Style Selector="TabItem#TransfersTabItem">
							<Setter Property="ToolTip.Tip">
								<Template>
									<ToolTip>
										<StackPanel Classes="HotKeyedToolTip">
											<TextBlock Text="Currently active &amp; inactive torrents"/>
											<TextBlock Text="Hotkey: Ctrl+1"/>
										</StackPanel>
									</ToolTip>
								</Template>
							</Setter>
						</Style>
						<Style Selector="TabItem#SearchTabItem">
							<Setter Property="ToolTip.Tip">
								<Template>
									<ToolTip>
										<StackPanel Classes="HotKeyedToolTip">
											<TextBlock Text="Configure search plugins, search and download from within the app"/>
											<TextBlock Text="Hotkey: Ctrl+2"/>
										</StackPanel>
									</ToolTip>
								</Template>
							</Setter>
						</Style>
						<Style Selector="TabItem#RSSFeedsTabItem">
							<Setter Property="ToolTip.Tip">
								<Template>
									<ToolTip>
										<StackPanel Classes="HotKeyedToolTip">
											<TextBlock Text="Add or edit RSS feeds"/>
											<TextBlock Text="Hotkey: Ctrl+3"/>
										</StackPanel>
									</ToolTip>
								</Template>
							</Setter>
						</Style>
						<Style Selector="TabItem#RSSRulesTabItem">
							<Setter Property="ToolTip.Tip">
								<Template>
									<ToolTip>
										<StackPanel Classes="HotKeyedToolTip">
											<TextBlock Text="Add rules to RSS feeds to automate downloads"/>
											<TextBlock Text="(Requires RSS feeds to be added first to be useful)" Opacity="0.6" FontStyle="Italic"/>
											<TextBlock Text="Hotkey: Ctrl+4"/>
										</StackPanel>
									</ToolTip>
								</Template>
							</Setter>
						</Style>
					</TabStrip.Styles>
					<TabItem Header="Transfers" Theme="{StaticResource TitleBarTabItem}" x:Name="TransfersTabItem">
						<TabItem.Styles>
							<Style Selector="FlyoutPresenter">
								<Setter Property="Background" Value="{DynamicResource SystemAccentColorDark1}"/>
							</Style>
						</TabItem.Styles>
						<FlyoutBase.AttachedFlyout>
							<Flyout Placement="Bottom" Flyout.FlyoutPresenterClasses="Stretch">
								<TextBlock x:Name="FlyoutTextBlock">
									<TextBlock.RenderTransform>
										<ScaleTransform ScaleX="0.2" ScaleY="0.2" />
									</TextBlock.RenderTransform>
									<TextBlock.RenderTransformOrigin>0.5,0.5</TextBlock.RenderTransformOrigin>
								</TextBlock>
							</Flyout>
						</FlyoutBase.AttachedFlyout>
					</TabItem>
					<TabItem Header="Search" Theme="{StaticResource TitleBarTabItem}" x:Name="SearchTabItem"/>
					<TabItem Header="RSS Feeds" Theme="{StaticResource TitleBarTabItem}" x:Name="RSSFeedsTabItem"/>
					<TabItem Header="RSS Rules" Theme="{StaticResource TitleBarTabItem}" x:Name="RSSRulesTabItem"/>
				</TabStrip>
				<ToggleButton
						Grid.Column="2"
						Click="SettingsMenuButton_Click"
						x:Name="SettingsMenuButton"
						Classes="FakeWindowControl">
					<ic:SymbolIcon
						x:Name="SettingsSymbolIcon"
						Height="20"
						Width="20"
						Symbol="Settings"
						IconVariant="Filled"
						HorizontalAlignment="Center" />
					<ToggleButton.ContextMenu>
						<ContextMenu
							x:Name="SettingsContextMenu"
							PlacementTarget="{Binding #SettingsMenuButton}}"
							PlacementAnchor="BottomRight"
							Placement="Bottom">
							<MenuItem IsVisible="{Binding IsLoggedIn}">
								<MenuItem.Header>
									<DockPanel>
										<TextBlock>Log out</TextBlock>
										<TextBlock HorizontalAlignment="Right" Text="{Binding Username}" Opacity="0.6"/>
									</DockPanel>
								</MenuItem.Header>
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="PersonArrowRight" />
								</MenuItem.Icon>
								<MenuItem Click="LogOutMenuItem_Click" Header="Log out">
									<MenuItem.Icon>
										<ic:SymbolIcon Symbol="PersonArrowRight" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Click="LogOutDeleteMenuItem_Click" Header="Log out &amp; delete saved info">
									<MenuItem.Icon>
										<ic:SymbolIcon Foreground="{DynamicResource SystemErrorTextColor}" Symbol="PersonDelete" />
									</MenuItem.Icon>
								</MenuItem>
								<!--<MenuItem IsEnabled="False" Header="{Binding Username, StringFormat={}Logged in as {0}}" HorizontalAlignment="Center"/>-->
							</MenuItem>
							<MenuItem Header="Log in" IsVisible="{Binding !IsLoggedIn}" Click="LogInMenuItem_Click">
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="PersonBoard" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="View">
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="CheckboxChecked" />
								</MenuItem.Icon>
								<MenuItem Header="Sidebar">
									<MenuItem.Icon>
										<ic:SymbolIcon Symbol="LayoutColumnOneThirdLeft" />
									</MenuItem.Icon>
									<MenuItem
										Header="Show sidebar"
										ToggleType="CheckBox"
										IsChecked="{Binding TorrentsViewModel.ShowSideBar, Mode=TwoWay}">
										<MenuItem.Icon>
											<ic:SymbolIcon Symbol="LayoutColumnOneThirdLeft"/>
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem
										Header="Show status icons"
										ToggleType="CheckBox"
										IsChecked="{Binding TorrentsViewModel.ShowSideBarStatusIcons, Mode=TwoWay}">
										<MenuItem.Icon>
											<ic:SymbolIcon Symbol="TextBulletList" />
										</MenuItem.Icon>
									</MenuItem>
								</MenuItem>
								<MenuItem Header="RSS Rules">
									<MenuItem.Icon>
										<ic:SymbolIcon Symbol="Rss"/>
									</MenuItem.Icon>
									<MenuItem
										Header="Show 'Smart filter'"
										ToggleType="CheckBox"
										IsChecked="{Binding ShowRssRuleSmartFilter, Mode=TwoWay}"
										ToolTip.Tip="Going by online reports this does not seem to work. If it doesn't work, why show it?">
										<MenuItem.Icon>
											<ic:SymbolIcon Symbol="CheckmarkUnderlineCircle"/>
										</MenuItem.Icon>
									</MenuItem>
								</MenuItem>
								<MenuItem ToggleType="CheckBox" IsChecked="{Binding ShowLogging, Mode=TwoWay}" Header="Show logging">
									<MenuItem.Icon>
										<ic:SymbolIcon Symbol="WindowConsole"/>
									</MenuItem.Icon>
								</MenuItem>
							</MenuItem>
							<MenuItem Header="Open file/url action">
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="Open" />
								</MenuItem.Icon>
								<MenuItem>
									<MenuItem.Icon>
										<ic:SymbolIcon Symbol="ArrowDownload" />
									</MenuItem.Icon>
									<MenuItem.Header>
										<RadioButton IsChecked="{Binding BypassDownloadWindow}" GroupName="OpenTorrent">
											<RadioButton.Content>
												<TextBlock Margin="0 0 10 0">Download immediately</TextBlock>
											</RadioButton.Content>
										</RadioButton>
									</MenuItem.Header>
								</MenuItem>
								<MenuItem>
									<MenuItem.Icon>
										<ic:SymbolIcon Symbol="WindowNew" />
									</MenuItem.Icon>
									<MenuItem.Header>
										<RadioButton GroupName="OpenTorrent" IsChecked="{Binding !BypassDownloadWindow}">
											<RadioButton.Content>
												<TextBlock Margin="0 0 10 0">Present download dialog</TextBlock>
											</RadioButton.Content>
										</RadioButton>
									</MenuItem.Header>
								</MenuItem>
							</MenuItem>
							<MenuItem Header="Settings (local)" Click="SettingsLocalMenuItem_Click">
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="WrenchSettings" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="Preferences (for remote)" Click="RemoteSettingsMenuItem_Click">
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="SettingsCogMultiple" />
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="About qBittorrent Companion" Click="OwnAboutMenuItem_Click">
								<MenuItem.Icon>
									<ic:SymbolIcon Symbol="Info" />
								</MenuItem.Icon>
							</MenuItem>
						</ContextMenu>
					</ToggleButton.ContextMenu>
				</ToggleButton>
			</Grid>


			<Grid Grid.Row="1" RowDefinitions="* auto" ColumnDefinitions="* auto">

				<Carousel Grid.Column="0" Grid.Row="0" x:Name="MainCarousel" SelectedIndex="0" Background="{DynamicResource SystemRegionColor}">
					<Carousel.Items>
						<views:TorrentsView x:Name="TransfersTorrentsView" DataContext="{Binding TorrentsViewModel}" BorderBrush="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
						<views:SearchView x:Name="SearchView" BorderBrush="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}" />
						<views:RssFeedsView x:Name="RssFeedsView" BorderBrush="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
						<views:RssRulesView x:Name="RssRulesView" BorderBrush="{DynamicResource SystemControlBackgroundChromeMediumLowBrush}"/>
					</Carousel.Items>
				</Carousel>

				<Border Grid.Column="1" Grid.Row="0" IsVisible="{Binding ShowLogging}" BorderBrush="{DynamicResource SystemAccentColorDark3}" BorderThickness="2">
					<Border.Styles>
						<Style Selector="Label">
							<Setter Property="Background" Value="{DynamicResource SystemAccentColorDark3}"/>
							<Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight3}"/>
						</Style>
						<Style Selector="ic|SymbolIcon:not(#WikiLink)">
							<Setter Property="FontSize" Value="16"/>
							<Setter Property="IconVariant" Value="Filled"/>
							<Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight3}"/>
						</Style>
						<Style Selector="ListBoxItem">
							<Setter Property="Padding" Value="0 2 0 3"/>
							<Setter Property="FontSize" Value="16"/>
						</Style>
						<Style Selector="ic|SymbolIcon">
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="Margin" Value="0 0 2 0"/>
						</Style>
					</Border.Styles>
					<DockPanel>
						<TabStrip DockPanel.Dock="Bottom" x:Name="LoggingTabStrip" SelectedIndex="1">
							<TabStrip.Styles>
								<Style Selector="ItemsPresenter#PART_ItemsPresenter>WrapPanel">
									<Setter Property="Background" Value="{DynamicResource SystemAccentColorDark3}"/>
								</Style>
								<Style Selector="TabStripItem:selected /template/ Border#PART_SelectedPipe">
									<Setter Property="VerticalAlignment" Value="Top"/>
									<Setter Property="Margin" Value="20 0 20 2"/>
								</Style>
								<Style Selector="TabStripItem">
									<Setter Property="Padding" Value="0"/>
									<Setter Property="Margin" Value="0"/>
									<Setter Property="MinWidth" Value="200"/>
								</Style>
								<Style Selector="TabStripItem:selected>Border">
									<Setter Property="Background" Value="{DynamicResource SystemRegionColor}"/>
								</Style>
								<Style Selector="TabItem /template/ Border#PART_LayoutRoot ContentPresenter#PART_ContentPresenter">
									<Setter Property="Foreground" Value="{DynamicResource SystemAccentColorLight3}"/>
								</Style>
								<Style Selector="TabItem">
									<Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemAccentColorLight3}"/>
									<Setter Property="MinHeight" Value="10"/>
									<Setter Property="HorizontalContentAlignment" Value="Center"/>
								</Style>
								<Style Selector="TabItem:pointerover, TabItem:selected:pointerover">
									<Setter Property="TextBlock.Foreground" Value="{DynamicResource SystemAccentColor}"/>
								</Style>
							</TabStrip.Styles>
							<TabItem Header="Network" Theme="{StaticResource TitleBarTabItem}"/>
							<TabItem Header="Debug info" Theme="{StaticResource TitleBarTabItem}"/>
						</TabStrip>
						<!--{Binding #LoggingTabStrip.SelectedIndex} -->
						<Carousel Padding="0" MinWidth="400" DockPanel.Dock="Top" SelectedIndex="{Binding #LoggingTabStrip.SelectedIndex}">
							<Grid RowDefinitions="auto 200 *" Margin="0 -2 0 0">
								<Grid Grid.Row="0" ColumnDefinitions="* auto auto auto auto" Background="{DynamicResource SystemAccentColorDark3}">
									<Label Grid.Column="0" Content="Requests" Target="{Binding #HttpDataListBox}"/>
									<Button Grid.Column="1" Classes="Stealth" IsEnabled="{Binding !!#HttpDataListBox.SelectedItem}">
										<ic:SymbolIcon Symbol="Globe"/>
									</Button>
									<Button Grid.Column="2" Classes="Stealth" IsEnabled="{Binding SelectedHttpData.LinkDocInfo.Url, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
										<ToolTip.Tip>
											<TextBlock>
												<Run Text="{Binding SelectedHttpData.LinkDocInfo.ShortDescription}"/>
												<LineBreak/>
												<Run Text="{Binding SelectedHttpData.LinkDocInfo.Url}" />
											</TextBlock>
										</ToolTip.Tip>
										<ic:SymbolIcon Symbol="BookGlobe"/>
									</Button>
									<Button Grid.Column="3" Classes="Stealth" Margin="4 0 0 0">
										<Panel>
											<ic:SymbolIcon Symbol="Filter" IsVisible="{Binding CanUncheckHttpDataUrl}"/>
											<ic:SymbolIcon
												Symbol="FilterDismiss"
												IsVisible="{Binding !CanUncheckHttpDataUrl}"
												Foreground="{DynamicResource SystemErrorTextColor}"
												ToolTip.Tip="All options are unchecked, there will be nothing to display"/>
										</Panel>
										<Button.Flyout>
											<Flyout>
												<StackPanel>
													<TextBlock HorizontalAlignment="Center" Opacity="0.6">URLs to display</TextBlock>
													<Border Background="{DynamicResource SystemChromeDisabledHighColor}" CornerRadius="4" Padding="4" Margin="0 4">
														<DockPanel MinWidth="300" Margin="4 0">
															<CheckBox IsChecked="{Binding CheckAllHttpDataUrls}">Check all</CheckBox>
															<Button Command="{Binding UncheckAllHttpDataUrlsCommand}" IsEnabled="{Binding CanUncheckHttpDataUrl}" HorizontalAlignment="Right">Uncheck all</Button>
														</DockPanel>
													</Border>
													<ItemsControl ItemsSource="{Binding HttpDataUrls}">
														<ItemsControl.ItemTemplate>
															<DataTemplate>
																<Border BorderBrush="{DynamicResource SystemChromeDisabledHighColor}" BorderThickness="0 0 0 1" HorizontalAlignment="Stretch" Margin="4 0 0 0">
																	<CheckBox
																		IsChecked="{Binding IsChecked, Mode=TwoWay}"
																		VerticalAlignment="Center"
																		Margin="4 2"
																		HorizontalAlignment="Stretch"
																		HorizontalContentAlignment="Stretch">
																		<Grid ColumnDefinitions="* auto" RowDefinitions="auto auto">
																			<TextBlock Grid.Column="0" Grid.Row="0" Margin="8 0 0 0" Text="{Binding Url}"/>
																			<Button Grid.Column="0" Grid.Row="1" Classes="Stealth" IsVisible="{Binding LinkDocInfo.ShortDescription, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
																				<TextBlock>
																					<ic:SymbolIcon Symbol="BookGlobe" x:Name="WikiLink" Margin="0 0 4 0"/>
																					<Run Text="{Binding LinkDocInfo.ShortDescription}"/>
																				</TextBlock>
																			</Button>

																			<TextBlock Grid.Column="1" Grid.RowSpan="2" Text="{Binding Count}" VerticalAlignment="Center" Opacity="0.6"/>
																		</Grid>
																	</CheckBox>
																</Border>
															</DataTemplate>
														</ItemsControl.ItemTemplate>
													</ItemsControl>
												</StackPanel>
											</Flyout>
										</Button.Flyout>
									</Button>
									<Button Grid.Column="4" Classes="Stealth" Command="{Binding ToggleLogNetworkRequestsCommand}" HorizontalAlignment="Right" ToolTip.Tip="Note that this just pauses the logging, the requests will continue to happen">
										<StackPanel>
											<ic:SymbolIcon Symbol="Pause" IsVisible="{Binding LogNetworkRequests}"/>
											<ic:SymbolIcon Symbol="Play" IsVisible="{Binding !LogNetworkRequests}"/>
										</StackPanel>
									</Button>
								</Grid>
								<ListBox
									Grid.Row="1"
									Grid.IsSharedSizeScope="True"
									ScrollViewer.VerticalScrollBarVisibility="Visible"
									ItemsSource="{Binding HttpData}"
									SelectedItem="{Binding SelectedHttpData}"
									x:Name="HttpDataListBox"
									HorizontalAlignment="Stretch"
									ext:AutoScrollBehavior.IsEnabled="True">
									<ListBox.Styles>
										<Style Selector="Border.Latency>TextBlock">
											<Setter Property="FontFamily" Value="Inconsolata, Consolas, Monospace, Courier"/>
											<Setter Property="FontSize" Value="16"/>
											<Setter Property="Margin" Value="0"/>
											<Setter Property="Padding" Value="0"/>
											<Setter Property="HorizontalAlignment" Value="Center"/>
										</Style>
										<Style Selector="Border.Latency">
											<Setter Property="Padding" Value="2 0 2 0"/>
											<Setter Property="MinWidth" Value="50"/>
										</Style>
										<Style Selector="Border.ConnectionAttempts">
										</Style>
										<Style Selector="Border.ConnectionAttempts>TextBlock">
											<Setter Property="FontFamily" Value="Inconsolata, Consolas, Monospace, Courier"/>
											<Setter Property="VerticalAlignment" Value="Center"/>
											<Setter Property="FontSize" Value="10"/>
										</Style>
									</ListBox.Styles>
									<ListBox.ItemTemplate>
										<DataTemplate>
											<Border IsVisible="{Binding IsVisible}">
												<ToolTip.Tip>
													<Grid ColumnDefinitions="auto *" RowDefinitions="auto auto auto auto auto auto">
														<Grid.Styles>
															<Style Selector="TextBlock.Description">
																<Setter Property="Opacity" Value="0.6"/>
																<Setter Property="HorizontalAlignment" Value="Right"/>
																<Setter Property="Padding" Value="0 0 8 0"/>
															</Style>
														</Grid.Styles>
														<TextBlock Grid.Column="0" Grid.Row="0" Classes="Description" Text="Connection attempt"/>
														<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding ConnectionAttempt}"/>

														<TextBlock Grid.Column="0" Grid.Row="1" Classes="Description" Text="Connection type"/>
														<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding ConnectionType}"/>

														<TextBlock Grid.Column="0" Grid.Row="2" Classes="Description" Text="HTTP Status Code"/>
														<TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding HttpStatusCode, Converter={StaticResource HttpStatusCodeToMessageConverter}}"/>

														<TextBlock Grid.Column="0" Grid.Row="3" Classes="Description" Text="URL"/>
														<TextBlock Grid.Column="1" Grid.Row="3" Text="{Binding Url}" TextWrapping="NoWrap"/>

														<Border Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" BorderBrush="{DynamicResource SystemChromeDisabledHighColor}" BorderThickness="0 1 0 0" Margin="0 8 0 4">
															<TextBlock Classes="Description" HorizontalAlignment="Center" Padding="0">
																<Run Text="{Binding RequestTime}"/>
																<Run Text="{Binding RequestDurationMilliseconds, StringFormat='{}(took {0}ms)'}}"/>
															</TextBlock>
														</Border>
													</Grid>
												</ToolTip.Tip>
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="Auto" SharedSizeGroup="ColDeco"/>
														<ColumnDefinition Width="Auto" SharedSizeGroup="ColAttempt"/>
														<ColumnDefinition Width="Auto" SharedSizeGroup="ColLatency"/>
														<ColumnDefinition Width="*" SharedSizeGroup="ColUrl"/>
													</Grid.ColumnDefinitions>
													<Border>
														<Border.Styles>
															<Style Selector="ic|SymbolIcon">
																<Setter Property="Symbol" Value="ErrorCircle"/>
																<Setter Property="VerticalAlignment" Value="Center"/>
															</Style>
															<Style Selector="ic|SymbolIcon.IsBadStatusCode">
																<Setter Property="Foreground" Value="{DynamicResource SystemErrorTextColor}"/>
															</Style>
															<Style Selector="ic|SymbolIcon.Bounced">
																<Setter Property="Symbol" Value="ArrowBounce"/>
															</Style>
															<Style Selector="ic|SymbolIcon.IsGoodStatusCode.IsGet">
																<Setter Property="Symbol" Value="ArrowBetweenDown"/>
															</Style>
															<Style Selector="ic|SymbolIcon.IsGoodStatusCode.IsPost">
																<Setter Property="Symbol" Value="MailArrowForward"/>
															</Style>
														</Border.Styles>
														<Panel>
															<ic:SymbolIcon
																Classes.IsBadStatusCode="{Binding !IsGoodStatusCode}"
																Classes.IsGoodStatusCode="{Binding IsGoodStatusCode}"
																Classes.IsPost="{Binding IsPost}"
																Classes.IsGet="{Binding !IsPost}"
																Classes.Bounced="{Binding IsConnectionFailure}"/>
														</Panel>
													</Border>
													<Border Grid.Column="1" Classes="ConnectionAttempts">
														<TextBlock Text="{Binding ConnectionAttemptAndTotal}"/>
													</Border>
													<Border Grid.Column="2" Classes="Latency">
														<TextBlock HorizontalAlignment="Right" Text="{Binding RequestDurationMilliseconds, StringFormat='{}{0}ms'}"/>
													</Border>
													<TextBlock Grid.Column="3" Text="{Binding UrlPath}" TextTrimming="CharacterEllipsis"/>
												</Grid>
											</Border>
										</DataTemplate>
									</ListBox.ItemTemplate>
								</ListBox>
								<DockPanel Grid.Row="2">
									<Grid DockPanel.Dock="Top" ColumnDefinitions="* auto auto auto" Background="{DynamicResource SystemAccentColorDark3}">
										<Label Content="Request headers" Target="RequestTextBox"/>
										<TextBlock Grid.Column="1">
											<Run Text="{Binding SelectedHttpData.RequestTime}"/>
											<Run Text="{Binding SelectedHttpData.RequestDurationMilliseconds, StringFormat='{}(took {0}ms)'}}"/>
										</TextBlock>
										<Button Grid.Column="2" Classes="Stealth" Click="CopyNetworkRequestLinkButton_Click">
											<ic:SymbolIcon Symbol="ClipboardLink"/>
										</Button>
										<Button Grid.Column="3" Classes="Stealth" Click="CopyNetworkRequestButton_Click">
											<ic:SymbolIcon Symbol="Clipboard"/>
										</Button>
									</Grid>
									<TextBox x:Name="RequestTextBox" DockPanel.Dock="Top" AcceptsReturn="True" IsReadOnly="True" Text="{Binding SelectedHttpData.Request}" TextWrapping="Wrap" BorderThickness="0"/>
									<DockPanel DockPanel.Dock="Top" Background="{DynamicResource SystemAccentColorDark3}">
										<TextBlock DockPanel.Dock="Right" Margin="0 0 8 0">
											<Run Text="{Binding SelectedHttpData.HttpStatusCode, Converter={StaticResource HttpStatusCodeToMessageConverter}}"/>
										</TextBlock>
										<Label DockPanel.Dock="Left" Content="Response"/>
									</DockPanel>
									<cc:BindableJsonEditor
										DockPanel.Dock="Top"
										BoundText="{Binding SelectedHttpData.Response}"
										VerticalAlignment="Stretch"
										IsVisible="{Binding !SelectedHttpData.IsConnectionFailure}"/>
									<TextBlock
										IsVisible="{Binding SelectedHttpData.IsConnectionFailure}"
										Text="Could not send the network request"
										HorizontalAlignment="Center"
										Opacity="0.6"/>
								</DockPanel>
							</Grid>
							<DockPanel>
								<Label DockPanel.Dock="Top">Log entries</Label>
								<ListBox 
									DockPanel.Dock="Top" 
									MinHeight="400" 
									ItemsSource="{Binding LogMessages}" 
									SelectedItem="{Binding SelectedLogMessage}">
									<ListBox.Styles>
										<Style Selector="ic|SymbolIcon[Symbol=Warning]">
											<Setter Property="Foreground" Value="{DynamicResource SystemAccentColor}"/>
										</Style>
										<Style Selector="ic|SymbolIcon[Symbol=ErrorCircle], ic|SymbolIcon[Symbol=ShieldError]">
											<Setter Property="Foreground" Value="{DynamicResource SystemErrorTextColor}"/>
										</Style>
									</ListBox.Styles>
									<ListBox.ItemTemplate>
										<DataTemplate>
											<Border IsVisible="{Binding IsVisible}">
												<Grid ColumnDefinitions="auto *">
													<ic:SymbolIcon Grid.Column="0" Symbol="{Binding Level, Converter={StaticResource LogLevelToIconConverter}}"/>
													<TextBlock Grid.Column="1" Text="{Binding Title}"/>
												</Grid>
											</Border>
										</DataTemplate>
									</ListBox.ItemTemplate>
								</ListBox>
								
								<Label DockPanel.Dock="Top" Content="Log details"/>
								<Grid 
									DockPanel.Dock="Top" 
									ColumnDefinitions="auto *" 
									RowDefinitions="auto auto auto" 
									Margin="2" 
									x:Name="LogDetailsGrid"
									IsVisible="{Binding SelectedLogMessage, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
									<TextBlock Grid.Column="0" Grid.Row="0" Text="Originated from: " HorizontalAlignment="Right" Opacity="0.6"/>
									<TextBlock Grid.Column="1" Grid.Row="0" Text="{Binding SelectedLogMessage.Source}"/>
									
									<TextBlock Grid.Column="0" Grid.Row="1" Text="Logged at: " Opacity="0.6" HorizontalAlignment="Right"/>
									<TextBlock Grid.Column="1" Grid.Row="1" Text="{Binding SelectedLogMessage.Timestamp}"/>
									
									<TextBlock Grid.Column="0" Grid.Row="2" Text="Level: " Opacity="0.6" HorizontalAlignment="Right"/>
									<TextBlock Grid.Column="1" Grid.Row="2" Text="{Binding SelectedLogMessage.Level}"/>
								</Grid>
								<Label DockPanel.Dock="Top" IsVisible="{Binding #LogDetailsGrid.IsVisible}">Data</Label>
								<cc:BindableJsonEditor
									DockPanel.Dock="Top"
									BoundText="{Binding SelectedLogMessage.Message}"
									VerticalAlignment="Stretch"
									IsVisible="{Binding #LogDetailsGrid.IsVisible}"/>

								<Grid DockPanel.Dock="Bottom" RowDefinitions="* auto *" IsVisible="{Binding !#LogDetailsGrid.IsVisible}">
									<TextBlock Opacity="0.6">No log entry is selected</TextBlock>
								</Grid>
							</DockPanel>
						</Carousel>
					</DockPanel>
				</Border>

				<Border
					x:Name="BottomBorder"
					Grid.Row="2"
					Grid.ColumnSpan="2"
					BorderBrush="{DynamicResource SystemChromeDisabledHighColor}"
					BorderThickness="0 1 0 0"
					>
					<Grid Name="StatusBarGrid" VerticalAlignment="Stretch" DataContext="{Binding ServerStateVm}">
						<!-- Not sure where the 10 at the end is coming from, but if it's not there the last entry doesn't appear properly -->
						<Grid ColumnDefinitions="*, auto, auto, auto, auto, auto, auto, auto, auto, auto, auto, auto, 10" VerticalAlignment="Stretch">
							<Grid.Styles>
								<Style Selector="TextBlock.FirstCol">
									<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
									<Setter Property="Margin" Value="4 0 0 0"/>
								</Style>
								<Style Selector="ToggleButton">
									<Setter Property="Margin" Value="-11 -3 -11 -3"/>
									<Setter Property="Padding" Value="0"/>
									<Setter Property="VerticalAlignment" Value="Stretch"/>
									<Setter Property="CornerRadius" Value="0"/>
									<Setter Property="Background" Value="Transparent"/>
								</Style>
								<Style Selector="ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter">
									<Setter Property="Background" Value="{DynamicResource SystemChromeMediumColor}"/>
								</Style>
								<Style Selector="ToggleButton:pointerover">
									<Setter Property="CornerRadius" Value="0"/>
								</Style>
								<Style Selector="ToggleButton ic|SymbolIcon.FlyoutIndicator">
									<Setter Property="Margin" Value="-6 -4 4 0"/>
								</Style>
							</Grid.Styles>
							<TextBlock
								Grid.Column="0"
								x:CompileBindings="False"
								x:DataType="vm:TorrentsViewModel"
								Text="{Binding #TransfersTorrentsView.DataContext.SelectedTorrent.Name}"
								IsVisible="{Binding #TransfersTabItem.IsSelected}"
								Classes="FirstCol"
								Opacity="0.6"
								x:Name="SelectedTorrentTextBlock"/>
							<TextBlock Grid.Column="0" x:Name="FlashMessageTextBlock" Classes="FirstCol" />
							<TextBlock Grid.Column="0" x:Name="PermanentMessageTextBlock" Classes="FirstCol"/>
							<TextBlock
								Grid.Column="0"
								TextTrimming="CharacterEllipsis"
								x:CompileBindings="False"
								x:DataType="vm:TorrentsViewModel"
								Text="{Binding #SearchView.DataContext.SelectedSearchResult.FileUrl}"
								Classes="FirstCol"
								IsVisible="{Binding #SearchTab.IsSelected}"/>

							<StackPanel Grid.Column="1" Orientation="Horizontal">
								<ic:SymbolIcon Symbol="Storage" />
								<TextBlock Text="{Binding FreeSpaceOnDisk, Converter={StaticResource BytesToHumanReadableConverter}}" Margin="10 0"/>
							</StackPanel>
							<Border Grid.Column="2"/>
							<TextBlock Grid.Column="3" Text="{Binding DhtNodes, StringFormat='DHT: {0} nodes'}"/>
							<Border Grid.Column="4"/>
							<CheckBox Grid.Column="5"
								Checked="AltSpeedLimitsToggled"
								Unchecked="AltSpeedLimitsToggled"
								IsChecked="{Binding UseAltSpeedLimits}"
								FlowDirection="RightToLeft"
								Margin="0 -6"
								x:Name="AltSpeedLimitsCheckBox">
								<ic:SymbolIcon Symbol="TopSpeed" />
							</CheckBox>
							<Border Grid.Column="6"/>
							<ToggleButton Width="640" Grid.Column="7" HorizontalAlignment="Stretch" Checked="DownloadStatsButton_Checked" Unchecked="DownloadStatsButton_Unchecked">
								<Grid ColumnDefinitions="320 auto 320">
									<Grid Grid.Column="0" ColumnDefinitions="auto * auto auto, auto">
										<ic:SymbolIcon Grid.Column="0" Symbol="ArrowDownload" VerticalAlignment="Center"/>
										<TextBlock Grid.Column="1" Text="{Binding DlInfoSpeed, Converter={StaticResource BytesSpeedToHumanReadableConverter}}"/>
										<TextBlock Grid.Column="3">
											<Run Text="{Binding DlRateLimit, Converter={StaticResource BytesSpeedToHumanReadableConverter}, StringFormat=[{0}]}"/>
											<Run Text="{Binding DlInfoData, Converter={StaticResource BytesSpeedToHumanReadableConverter}, StringFormat=({0})}"/>
										</TextBlock>
									</Grid>
									<Border Grid.Column="1" Margin="2"/>
									<Grid Grid.Column="2" ColumnDefinitions="auto * auto auto, auto">
										<ic:SymbolIcon Grid.Column="0" Symbol="ArrowUpload" VerticalAlignment="Center" />
										<TextBlock Grid.Column="1" Text="{Binding UpInfoSpeed, Converter={StaticResource BytesSpeedToHumanReadableConverter}}"/>
										<TextBlock Grid.Column="3">
											<Run Text="{Binding UpRateLimit, Converter={StaticResource BytesSpeedToHumanReadableConverter}, StringFormat=[{0}]}}"/>
											<Run Text="{Binding UpInfoData, Converter={StaticResource BytesSpeedToHumanReadableConverter}, StringFormat=({0})}}"/>
										</TextBlock>
										<ic:SymbolIcon Grid.Column="4" Symbol="CaretUp" IconVariant="Filled" RenderTransform="ScaleX(0.6) ScaleY(0.6)" Classes="FlyoutIndicator" />
									</Grid>
								</Grid>
							</ToggleButton>
							<Border Grid.Column="10" />
							<Panel Grid.Column="11" Margin="-8 0" ToolTip.Tip="{Binding ConnectionStatus}">
								<ic:SymbolIcon VerticalAlignment="Center" Symbol="{Binding ConnectionStatusIcon}"/>
							</Panel>
						</Grid>
					</Grid>
				</Border>
			</Grid>
		</Grid>
	</Border>
</Window>