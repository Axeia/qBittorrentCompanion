<ThemeVariantScope xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d" d:DesignWidth="675" d:DesignHeight="525"
	xmlns:ic="using:FluentIcons.Avalonia"
	x:Class="qBittorrentCompanion.Views.LocalSettings.IconCustomizationPreview"
	xmlns:vls="using:qBittorrentCompanion.Views.LocalSettings"
	xmlns:vmls="using:qBittorrentCompanion.ViewModels.LocalSettings"
	x:DataType="vmls:IconCustomizationViewModel"
  xmlns:model="using:qBittorrentCompanion.Models"
  x:Name="IconCustomizationPreviewer"
	xmlns:converters="clr-namespace:qBittorrentCompanion.Converters"
	xmlns:ext="clr-namespace:qBittorrentCompanion.Extensions"
  xmlns:cc="clr-namespace:qBittorrentCompanion.CustomControls"
	>
	<ThemeVariantScope.Resources>
		<converters:IconSaveModeConverter x:Key="IconSaveModeConverter" />
		<converters:ExportActionConverter x:Key="ExportActionConverter" />
	</ThemeVariantScope.Resources>
	<ThemeVariantScope.Styles>
		<StyleInclude Source="/Styles/PreferencesStyles.axaml"/>
		<Style Selector="TextBlock, Label, ic|SymbolIcon">
			<Setter Property="TextElement.Foreground" Value="{DynamicResource SystemBaseHighColor}"/>
		</Style>
	</ThemeVariantScope.Styles>
	<StackPanel Background="{DynamicResource SystemRegionColor}">
		<Grid ColumnDefinitions="auto * auto * auto * 130" Margin="18 8 18 0" RowDefinitions="auto auto">
			<Grid.Styles>
				<Style Selector="StackPanel">
					<Setter Property="Margin" Value="8 4"/>
				</Style>
				<Style Selector="TextBlock">
					<Setter Property="FontSize" Value="12"/>
					<Setter Property="Opacity" Value="0.6"/>
				</Style>
				<Style Selector="ic|SymbolIcon">
					<Setter Property="Opacity" Value="0.6"/>
				</Style>
				<Style Selector="StackPanel>TextBlock:nth-child(1)">
					<Setter Property="FontWeight" Value="Bold"/>
				</Style>
			</Grid.Styles>

			<Panel Grid.Column="0" Grid.Row="0" x:Name="Preview16Panel" VerticalAlignment="Center" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
				<Svg Source="{Binding PreviewSvg}" Width="16" Height="16" Margin="8" x:Name="Preview16Svg"/>
			</Panel>
			<StackPanel Grid.Column="1" Grid.Row="0">
				<TextBlock Text="16px"/>
				<TextBlock Text="Task manager"/>
				<TextBlock Text="Context menu"/>
				<TextBlock Text="System tray"/>
				<TextBlock Text="Title bar"/>
			</StackPanel>

			<Panel Grid.Column="2" Grid.Row="0" x:Name="Preview24Panel" VerticalAlignment="Center" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
				<Svg Source="{Binding PreviewSvg}" Width="24" Height="24" Margin="8" x:Name="Preview24Svg"/>
			</Panel>
			<StackPanel Grid.Column="3" Grid.Row="0">
				<TextBlock Text="24px"/>
				<TextBlock Text="Search results"/>
				<TextBlock Text="Start all list"/>
				<TextBlock Text="Task bar"/>
			</StackPanel>

			<Panel Grid.Column="4" Grid.Row="0" x:Name="Preview32Panel" VerticalAlignment="Center" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
				<Svg Source="{Binding PreviewSvg}" Width="32" Height="32" Margin="8" x:Name="Preview32Svg"/>
			</Panel>
			<StackPanel Grid.Column="5" Grid.Row="0">
				<TextBlock Text="32px"/>
				<TextBlock Text="Start pins"/>
			</StackPanel>

			<DockPanel Grid.Column="6">
				<TextBlock DockPanel.Dock="Top" Text="Previewing in" FontWeight="Bold" HorizontalAlignment="Center"/>
				<Grid VerticalAlignment="Stretch">
					<!-- Buttons are assigned a .click from IconCustomizationView (view, not PREview) -->
					<Button x:Name="SwitchToLightModeButton" IsVisible="{Binding #IconCustomizationPreviewer.IsInDarkMode}" Classes="Stealth" VerticalAlignment="Stretch" CornerRadius="4">
						<StackPanel Orientation="Horizontal" Spacing="4" Margin="0" VerticalAlignment="Center">
							<ic:SymbolIcon Symbol="Glasses" IconVariant="Filled"/>
							<TextBlock FontWeight="Normal">Dark mode</TextBlock>
							<ic:SymbolIcon Symbol="ChevronRight" FontSize="24"/>
						</StackPanel>
					</Button>

					<Button x:Name="SwitchToDarkModeButton" IsVisible="{Binding !#IconCustomizationPreviewer.IsInDarkMode}" Classes="Stealth" VerticalAlignment="Stretch" CornerRadius="4">
						<StackPanel Orientation="Horizontal" Spacing="4" Margin="0" VerticalAlignment="Center">
							<ic:SymbolIcon Symbol="Lightbulb"/>
							<TextBlock FontWeight="Normal">Light mode</TextBlock>
							<ic:SymbolIcon Symbol="ChevronRight" FontSize="24"/>
						</StackPanel>
					</Button>
				</Grid>
			</DockPanel>
		</Grid>

		<HeaderedContentControl DockPanel.Dock="Top" Margin="0 -10 0 10">
			<HeaderedContentControl.Header>
				<Border Classes="SectionTop">
					<StackPanel>
						<Grid Classes="SectionTitle" ColumnDefinitions="auto * auto" RowDefinitions="auto auto">
							<ic:SymbolIcon Grid.Column="0" Grid.Row="0" Symbol="PaintBucket" RenderTransform="ScaleX(1.4) ScaleY(1.4)" Margin="0 4 16 0"/>
							<TextBlock Grid.Column="1" Grid.Row="0" Classes="SectionTitleMain" Text="Customize qBittorrent Companion icon colors"/>
							<!--
							<DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" >
								<TextBlock Classes="SectionTitleDescription" Text="Unsatisfied with qBittorrent Companions icon? Create your own variant."/>
							</DockPanel>-->
						</Grid>

						<Grid 
							ColumnDefinitions="auto auto auto auto * auto auto" 
							RowDefinitions="auto auto auto" 
							Margin="-10 0 -10 -10"
							ColumnSpacing="8">
							<Grid.Styles>
								<Style Selector="Button, SplitButton, SplitButton.Main.accent">
									<Setter Property="Padding" Value="4"/>
									<Setter Property="BorderThickness" Value="0"/>
									<Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
									<Setter Property="MinHeight" Value="25"/>
									<Setter Property="HorizontalContentAlignment" Value="Center"/>
								</Style>
								<Style Selector="Button">
									<Setter Property="VerticalAlignment" Value="Stretch"/>
									<Setter Property="VerticalContentAlignment" Value="Center"/>
								</Style>
								<Style Selector="Button:disabled /template/ ContentPresenter">
									<Setter Property="Background" Value="Transparent"/>
								</Style>
								<Style Selector="TextBlock, Label, Button">
									<Setter Property="TextElement.FontWeight" Value="Normal"/>
								</Style>
								<Style Selector="Label">
									<Setter Property="FontSize" Value="10"/>
									<Setter Property="HorizontalAlignment" Value="Center"/>
								</Style>
								<Style Selector="ComboBox">
									<Setter Property="VerticalAlignment" Value="Center"/>
								</Style>
								<Style Selector="ic|SymbolIcon">
									<Setter Property="FontSize" Value="14"/>
								</Style>
								<Style Selector="Label.FirstRow DockPanel">
									<Setter Property="HorizontalSpacing" Value="4"/>
								</Style>
								<Style Selector="Label.FirstRow ic|SymbolIcon">
									<Setter Property="FontSize" Value="12"/>
									<Setter Property="Opacity" Value="0.6"/>
								</Style>
								<Style Selector="Label.FirstRow:nth-child(3), Label.FirstRow:nth-child(4)">
									<Setter Property="Margin" Value="0 0 20 0"/>
								</Style>
							</Grid.Styles>

							<Label Grid.Column="0" Grid.Row="0" Classes="FirstRow"><DockPanel><ic:SymbolIcon Symbol="History" IconVariant="Filled"/><TextBlock Text="Undo/Redo"/></DockPanel></Label>
							<Label Grid.Column="1" Grid.Row="0" Classes="FirstRow"><DockPanel HorizontalAlignment="Center"><ic:SymbolIcon Symbol="BoxArrowUp" IconVariant="Filled" RenderTransform="ScaleY(-1)"/><TextBlock Text="Import"/></DockPanel></Label>
							<Label Grid.Column="3" Grid.Row="0" Classes="FirstRow"><DockPanel><ic:SymbolIcon Symbol="BoxArrowUp" IconVariant="Filled"/><TextBlock Text="Export"/></DockPanel></Label>
							<!-- Grid.Column 4 is used as a spacer, 5 has no header -->
							<Label Grid.Column="6" Grid.Row="0" Classes="FirstRow"><DockPanel><ic:SymbolIcon Symbol="Save" IconVariant="Filled" RenderTransform="ScaleY(-1)"/><TextBlock Text="Save and make default for"/></DockPanel></Label>

							<Border Grid.Row="1" Grid.ColumnSpan="9" BorderThickness="0 2 0 0" BorderBrush="{DynamicResource SystemChromeMediumColor}"/>

							<StackPanel Grid.Column="0"  Grid.Row="2" Spacing="2" Orientation="Horizontal">
								<SplitButton 
									Command="{Binding UndoCommand}" 
									Grid.IsSharedSizeScope="True"
									x:Name="UndoSplitButton"
									Classes="Stealth">
									<ToolTip.Tip><TextBlock Text="Undo the last color change, or see the dropdown for the entire history of changes"/></ToolTip.Tip>
									<SplitButton.Flyout>
										<Flyout Placement="TopEdgeAlignedLeft">
											<vls:ColorsRecordHistoryView IsForRedo="False"/>
										</Flyout>
									</SplitButton.Flyout>
									<ic:SymbolIcon Symbol="ArrowUndo"/>
								</SplitButton>
								<SplitButton 
									Command="{Binding RedoCommand}" 
									Grid.IsSharedSizeScope="True"
									x:Name="RedoSplitButton"
									Classes="Stealth">
									<ToolTip.Tip>Redo the last undo, or see the dropdown for the entire 'forward' history</ToolTip.Tip>
									<SplitButton.Flyout>
										<Flyout Placement="TopEdgeAlignedLeft">
											<vls:ColorsRecordHistoryView IsForRedo="True"/>
										</Flyout>
									</SplitButton.Flyout>
									<ic:SymbolIcon Symbol="ArrowRedo"/>
								</SplitButton>
							</StackPanel>
							<Button Grid.Column="1" Grid.Row="2" Click="ImportButton_Click" Content=".json/.svg" Classes="Stealth"/>
							<StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" Margin="-8 0" Cursor="Help">
								<ToolTip.Tip>
									<TextBlock>
										<Run Text="Although .svg is supported for importing and exporting it's not recommended for importing."/>
										<LineBreak/>
										<LineBreak/>
										<Run Text="The .json alternative is less error prone and uses less storage space."/>
									</TextBlock>
								</ToolTip.Tip>
								<ic:SymbolIcon Symbol="ChevronDoubleLeft" Opacity="0.4" FontSize="12" VerticalAlignment="Center"/>
								<ic:SymbolIcon Symbol="Info" VerticalAlignment="Center"/>
								<ic:SymbolIcon Symbol="ChevronDoubleRight" Opacity="0.4" FontSize="12" VerticalAlignment="Center"/>
							</StackPanel>
							<SplitButton 
								Grid.Column="3" 
								Grid.Row="2" 
								Click="ExportSplitButton_Click" 
								Content="{Binding SelectedExportAction, Converter={StaticResource ExportActionConverter}}"
								Classes="Stealth">
								<SplitButton.Styles>
									<Style Selector="MenuItem.ExportMenuItem DockPanel.DlMode">
										<Setter Property="Background" Value="{DynamicResource ComboBoxBackgroundDisabled}"/>
									</Style>
									<Style Selector="MenuItem.ExportMenuItem TextBlock">
										<Setter Property="Padding" Value="2"/>
									</Style>
									<Style Selector="MenuItem DockPanel">
										<Setter Property="HorizontalSpacing" Value="16"/>
									</Style>
									<Style Selector="MenuItem.ExportMenuItem Border.ExportBorder">
										<Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBackgroundDisabled}"/>
										<Setter Property="BorderThickness" Value="1"/>
									</Style>
								</SplitButton.Styles>
								<SplitButton.Flyout>
									<MenuFlyout Placement="BottomEdgeAlignedLeft">
										<MenuItem Classes="Narrow" IsEnabled="False">
											<MenuItem.Header>
												<StackPanel Margin="-20 0 -10 0" Spacing="4" Opacity="0.5" Orientation="Horizontal">
													<ic:SymbolIcon Symbol="ChevronDown" VerticalAlignment="Center"/>
													<TextBlock MaxWidth="180" Text="Recommended for backing up &amp; importing" TextWrapping="Wrap" FontSize="10"/>
												</StackPanel>
											</MenuItem.Header>
										</MenuItem>
										<MenuItem Classes="Narrow ExportMenuItem" ToggleType="Radio"
											IsChecked="{Binding SelectedExportAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:ExportAction.JSON_DARK_LIGHT}, Mode=TwoWay}"
											Header="{Binding ExportActionOptions[0], Converter={StaticResource ExportActionConverter}}">
										</MenuItem>
										<MenuItem Classes="Narrow ExportMenuItem" ToggleType="Radio"
											IsChecked="{Binding SelectedExportAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:ExportAction.JSON_DARK}, Mode=TwoWay}"
											Header="{Binding ExportActionOptions[1], Converter={StaticResource ExportActionConverter}}">
										</MenuItem>
										<MenuItem Classes="Narrow ExportMenuItem" ToggleType="Radio"
											IsChecked="{Binding SelectedExportAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:ExportAction.JSON_LIGHT}, Mode=TwoWay}"
											Header="{Binding ExportActionOptions[2], Converter={StaticResource ExportActionConverter}}">
										</MenuItem>
										
										<Separator Margin="0 8"/>

										<MenuItem Classes="Narrow ExportMenuItem" ToggleType="Radio"
											IsChecked="{Binding SelectedExportAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:ExportAction.SVG_DARK_LIGHT}, Mode=TwoWay}"
											Header="{Binding ExportActionOptions[3], Converter={StaticResource ExportActionConverter}}">
										</MenuItem>
										<MenuItem Classes="Narrow ExportMenuItem" ToggleType="Radio"
											IsChecked="{Binding SelectedExportAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:ExportAction.SVG_DARK}, Mode=TwoWay}"
											Header="{Binding ExportActionOptions[4], Converter={StaticResource ExportActionConverter}}">
										</MenuItem>
										<MenuItem Classes="Narrow ExportMenuItem" ToggleType="Radio"
											IsChecked="{Binding SelectedExportAction, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:ExportAction.SVG_LIGHT}, Mode=TwoWay}"
											Header="{Binding ExportActionOptions[5], Converter={StaticResource ExportActionConverter}}">
										</MenuItem>
										<MenuItem Classes="Narrow" IsEnabled="False">
											<MenuItem.Header>
												<StackPanel Margin="-20 0 -10 0" Spacing="4" Opacity="0.5" Orientation="Horizontal">
													<ic:SymbolIcon Symbol="ChevronUp" VerticalAlignment="Center"/>
													<TextBlock MaxWidth="180" Text="Not recommended for importing, but useful if you want an image" TextWrapping="Wrap" FontSize="10"/>
												</StackPanel>
											</MenuItem.Header>
										</MenuItem>
									</MenuFlyout>
								</SplitButton.Flyout>
							</SplitButton>
							<ic:SymbolIcon Symbol="Info" Cursor="Help" Grid.Column="5" Grid.Row="2" VerticalAlignment="Center">
								<ToolTip.Tip>
									<StackPanel>
										<TextBlock Text="1) Saves the color profile under a date/timestamped file name in json format"/>
										<TextBlock Text="2) Saves the new icon as a .ico file"/>
										<TextBlock Text="3) Apply the icon to all open windows"/>
										
										<TextBlock Margin="0 8 0 0" Text="Keep in mind that if you save for dark mode whilst in light mode (or vice versa) the icon won't be applied"/>
									</StackPanel>
								</ToolTip.Tip>
							</ic:SymbolIcon>
							<SplitButton
									Grid.Column="6"
									Grid.Row="2"
									VerticalAlignment="Center"
									Classes="MainButton accent"
									Margin="0"
									Padding="4"
									x:Name="SaveSplitButton"
									Command="{Binding SaveCommand}"
									CommandParameter="{Binding SelectedIconSaveMode}">
								<TextBlock Text="{Binding SelectedIconSaveMode, Converter={StaticResource IconSaveModeConverter}}" Margin="8 0"/>
								<SplitButton.Flyout>
									<MenuFlyout Placement="BottomEdgeAlignedRight">
										<MenuItem Classes="Narrow" ToggleType="Radio"
											Header="{Binding IconSaveModeOptions[0], Converter={StaticResource IconSaveModeConverter}}"
											IsChecked="{Binding SelectedIconSaveMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:IconSaveMode.DarkAndLight}, Mode=TwoWay}" />
										<MenuItem Classes="Narrow" ToggleType="Radio"
											Header="{Binding IconSaveModeOptions[1], Converter={StaticResource IconSaveModeConverter}}"
											IsChecked="{Binding SelectedIconSaveMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:IconSaveMode.Dark}, Mode=TwoWay}" />
										<MenuItem Classes="Narrow" ToggleType="Radio"
											Header="{Binding IconSaveModeOptions[2], Converter={StaticResource IconSaveModeConverter}}"
											IsChecked="{Binding SelectedIconSaveMode, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static vmls:IconSaveMode.Light}, Mode=TwoWay}" />
									</MenuFlyout>
								</SplitButton.Flyout>
							</SplitButton>
						</Grid>
					</StackPanel>
				</Border>
			</HeaderedContentControl.Header>
			<Border Classes="SectionBottom" Margin="-2 -2 -2 -20">

				<Panel Grid.Column="0" Margin="0 8 0 8" VerticalAlignment="Center">
					<Panel.Styles>
						<Style Selector="Label">
							<Setter Property="Width" Value="70"/>
							<Setter Property="MinHeight" Value="30"/>
						</Style>
						<Style Selector="Label AccessText">
							<Setter Property="VerticalAlignment" Value="Center"/>
						</Style>
						<Style Selector="Canvas>Border>StackPanel">
							<Setter Property="Orientation" Value="Horizontal"/>
						</Style>
						<Style Selector="Canvas>Border">
							<Setter Property="Background" Value="{DynamicResource SystemChromeMediumColor}"/>
							<Setter Property="Padding" Value="0"/>
							<Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
							<Setter Property="BorderThickness" Value="1"/>
						</Style>
						<Style Selector="TextBox">
							<Setter Property="MinHeight" Value="26"/>
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="VerticalContentAlignment" Value="Center"/>
							<Setter Property="Padding" Value="4"/>
							<Setter Property="FontFamily" Value="Lucida Console, Ubuntu Mono, Liberation Mono, Menlo"/>
							<Setter Property="MinWidth" Value="87"/>
						</Style>
						<Style Selector="Path.PointerPath">
							<Setter Property="StrokeThickness" Value="4"/>
							<Setter Property="Stroke" Value="{DynamicResource SystemChromeLowColor}"/>
						</Style>
						<Style Selector="Path.OutlinePointerPath">
							<Setter Property="StrokeThickness" Value="8"/>
							<Setter Property="Stroke" Value="{DynamicResource SystemAccentColor}"/>
						</Style>
						<Style Selector="ColorPicker DropDownButton">
							<Setter Property="Background" Value="Transparent"/>
						</Style>
					</Panel.Styles>
					<Canvas x:Name="LogoCanvas" Height="272" Width="606">

						<Border x:Name="LargePreviewBorder" Canvas.Left="350" Canvas.Top="8" Padding="0" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
							<Svg Source="{Binding PreviewSvg}" x:Name="Preview256Svg" />
						</Border>
						<Border Canvas.Top="6">
							<StackPanel>
								<Label Target="Q_ColorPicker">q letter</Label>
								<ColorPicker x:Name="Q_ColorPicker" Color="{Binding Q_Color, Mode=TwoWay}"/>
								<ColorView Theme="{StaticResource JustHexTextBox}" Color="{Binding Q_Color, Mode=TwoWay}"/>
							</StackPanel>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #QB_ConnectorPath.Data}" />
						<Path Classes="PointerPath" x:Name="QB_ConnectorPath"
							Data="
								M 244,23 
								h 96
								l 108,110
								m -6,-2
								a 4,4 0 1,0 8,0
								a 4,4 0 1,0 -8,0
						"/>

						<Border Canvas.Top="44" >
							<StackPanel>
								<Label Target="B_ColorPicker">b letter</Label>
								<ColorPicker x:Name="B_ColorPicker" Color="{Binding B_Color, Mode=TwoWay}"/>
								<ColorView Theme="{StaticResource JustHexTextBox}" Color="{Binding B_Color, Mode=TwoWay}"/>
							</StackPanel>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #B_ConnectorPath.Data}" />
						<Path Classes="PointerPath" x:Name="B_ConnectorPath"
							Data="
								M 244,61
								h 185
								m -8,0
								a 4,4 0 1,0 8,0
								a 4,4 0 1,0 -8,0
						"/>

						<Border Canvas.Top="86">
							<StackPanel>
								<Label MinHeight="{Binding}" Target="C_ColorPicker">C shape</Label>
								<ColorPicker x:Name="C_ColorPicker" Color="{Binding C_Color, Mode=TwoWay}"/>
								<ColorView Theme="{StaticResource JustHexTextBox}" Color="{Binding C_Color, Mode=TwoWay}"/>
							</StackPanel>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #C_ConnectorPath.Data}"/>
						<Path Classes="PointerPath" x:Name="C_ConnectorPath"
							Data="
							M 244,103 
							h 127
							m -8,0
							a 4,4 0 1,0 8,0
							a 4,4 0 1,0 -8,0
						"/>

						<Border Canvas.Top="133">
							<Border.Styles>
								<Style Selector="Grid>Border">
									<Setter Property="Background" Value="{DynamicResource SystemAccentColorLight}"/>
								</Style>
								<Style Selector="Grid.DarkMode>Border">
									<Setter Property="Background" Value="{DynamicResource SystemAccentColorDark3}"/>
								</Style>
							</Border.Styles>
							<Grid ColumnDefinitions="70 auto auto auto auto" RowDefinitions="auto 1 auto 1 auto 1 auto" Classes.DarkMode="{Binding IsInDarkMode}">
								<TextBlock Grid.Column="0" Grid.ColumnSpan="5" Opacity="0.6" VerticalAlignment="Center" TextAlignment="Center" FontSize="10" Padding="4" Text="Background gradient"/>

								<Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" Classes="Line" HorizontalAlignment="Stretch"/>

								<Label Grid.Column="0" Grid.Row="2" Target="GradientCenter_ColorPicker">Center</Label>
								<ColorPicker Grid.Column="1" Grid.Row="2" Color="{Binding GradientCenterColor}" x:Name="GradientCenter_ColorPicker"/>
								<ColorView Grid.Column="3" Grid.Row="2" Color="{Binding GradientCenterColor, Mode=TwoWay}" Theme="{StaticResource JustHexTextBox}"/>
									
								<Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="3" HorizontalAlignment="Stretch"/>

								<Label Grid.Column="0" Grid.Row="4" Target="GradientFill_ColorPicker">Fill</Label>
								<ColorPicker Grid.Column="1" Grid.Row="4" Color="{Binding GradientFillColor}" x:Name="GradientFill_ColorPicker"/>
								<ColorView Grid.Column="3" Grid.Row="4" Color="{Binding GradientFillColor, Mode=TwoWay}" Theme="{StaticResource JustHexTextBox}"/>

								<Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="5" HorizontalAlignment="Stretch"/>

								<Label Grid.Column="0" Grid.Row="6" Target="GradientRim_ColorPicker">Rim</Label>
								<ColorPicker Grid.Column="1" Grid.Row="6" Color="{Binding GradientRimColor}" x:Name="GradientRim_ColorPicker"/>
								<ColorView Grid.Column="3" Grid.Row="6" Color="{Binding GradientRimColor, Mode=TwoWay}" Theme="{StaticResource JustHexTextBox}"/>
							</Grid>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #BG_ConnectorPath.Data}"/>
						<Path Classes="PointerPath" x:Name="BG_ConnectorPath"
							Data="
								M 244,206 h 175
								m -8,0
								a 4,4 0 1,0 8,0
								a 4,4 0 1,0 -8,0
						"/>
					</Canvas>
				</Panel>


			</Border>
		</HeaderedContentControl>
	</StackPanel>
</ThemeVariantScope>
