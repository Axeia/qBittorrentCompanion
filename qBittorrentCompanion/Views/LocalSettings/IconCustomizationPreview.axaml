<ThemeVariantScope xmlns="https://github.com/avaloniaui"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d" d:DesignWidth="675" d:DesignHeight="525"
	xmlns:ic="using:FluentIcons.Avalonia"
	x:Class="qBittorrentCompanion.Views.LocalSettings.IconCustomizationPreview"
	xmlns:vls="using:qBittorrentCompanion.Views.LocalSettings"
	xmlns:vmls="using:qBittorrentCompanion.ViewModels.LocalSettings"
	x:DataType="vmls:IconCustomizationViewModel"
  xmlns:model="using:qBittorrentCompanion.Models"
  x:Name="IconCustomizationPreviewer"
	>
	<ThemeVariantScope.Styles>
		<StyleInclude Source="/Styles/PreferencesStyles.axaml"/>
		<Style Selector="TextBlock, Label, ic|SymbolIcon">
			<Setter Property="TextElement.Foreground" Value="{DynamicResource SystemBaseHighColor}"/>
		</Style>
	</ThemeVariantScope.Styles>
	<StackPanel Background="{DynamicResource SystemRegionColor}">
		<StackPanel.Styles>
			<Style Selector="SplitButton">
				<Setter Property="Background" Value="Transparent"/>
			</Style>
		</StackPanel.Styles>
		<Grid ColumnDefinitions="auto * auto * auto * 150" Margin="16 8 16 0" RowDefinitions="auto auto">
			<Grid.Styles>
				<Style Selector="StackPanel">
					<Setter Property="Margin" Value="8 4"/>
				</Style>
				<Style Selector="TextBlock">
					<Setter Property="FontSize" Value="12"/>
					<Setter Property="Opacity" Value="0.6"/>
				</Style>
				<Style Selector="ic|SymbolIcon">
					<Setter Property="Opacity" Value="0.6"/>
				</Style>
				<Style Selector="StackPanel>TextBlock:nth-child(1)">
					<Setter Property="FontWeight" Value="Bold"/>
				</Style>
			</Grid.Styles>

			<Panel Grid.Column="0" Grid.Row="0" x:Name="Preview16Panel" VerticalAlignment="Center" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
				<Svg Source="{Binding PreviewSvg}" Width="16" Height="16" Margin="8" x:Name="Preview16Svg"/>
			</Panel>
			<StackPanel Grid.Column="5" Grid.Row="0">
				<TextBlock Text="16px"/>
				<TextBlock Text="Task manager"/>
				<TextBlock Text="Context menu"/>
				<TextBlock Text="System tray"/>
				<TextBlock Text="Title bar"/>
			</StackPanel>

			<Panel Grid.Column="2" Grid.Row="0" x:Name="Preview24Panel" VerticalAlignment="Center" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
				<Svg Source="{Binding PreviewSvg}" Width="24" Height="24" Margin="8" x:Name="Preview24Svg"/>
			</Panel>
			<StackPanel Grid.Column="3" Grid.Row="0">
				<TextBlock Text="24px"/>
				<TextBlock Text="Search results"/>
				<TextBlock Text="Start all list"/>
				<TextBlock Text="Task bar"/>
			</StackPanel>

			<Panel Grid.Column="4" Grid.Row="0" x:Name="Preview32Panel" VerticalAlignment="Center" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
				<Svg Source="{Binding PreviewSvg}" Width="32" Height="32" Margin="8" x:Name="Preview32Svg"/>
			</Panel>
			<StackPanel Grid.Column="1" Grid.Row="0">
				<TextBlock Text="32px"/>
				<TextBlock Text="Start pins"/>
			</StackPanel>

			<Border Grid.Column="6" Padding="8">
				<Panel>
					<!-- Buttons are assigned a .click from IconCustomizationView (view, not PREview) -->
					<Button x:Name="SwitchToLightModeButton" IsVisible="{Binding #IconCustomizationPreviewer.IsInDarkMode}" Classes="Stealth">
						<Grid ColumnDefinitions="auto auto auto" RowDefinitions="auto auto" VerticalAlignment="Center">
							<TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="Previewing in:" HorizontalAlignment="Center"/>
							<ic:SymbolIcon Grid.Column="0" Grid.Row="1" Margin="0 4 4 0" Symbol="Glasses" IconVariant="Filled"/>
							<TextBlock Grid.Column="1" Grid.Row="1" FontWeight="Normal" VerticalAlignment="Bottom">Dark mode</TextBlock>
							<ic:SymbolIcon Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" Symbol="ChevronRight" FontSize="30"/>
						</Grid>
					</Button>

					<Button x:Name="SwitchToDarkModeButton" IsVisible="{Binding !#IconCustomizationPreviewer.IsInDarkMode}" Classes="Stealth">
						<Grid ColumnDefinitions="auto auto auto" RowDefinitions="auto auto" VerticalAlignment="Center">
							<TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Text="Previewing in:" HorizontalAlignment="Center"/>
							<ic:SymbolIcon Grid.Column="0" Grid.Row="1" Margin="0 4 0 0" Symbol="Lightbulb"/>
							<TextBlock Grid.Column="1" Grid.Row="1" FontWeight="Normal" VerticalAlignment="Bottom">Light mode</TextBlock>
							<ic:SymbolIcon Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" Symbol="ChevronRight" FontSize="30"/>
						</Grid>
					</Button>
				</Panel>
			</Border>
		</Grid>

		<HeaderedContentControl DockPanel.Dock="Top">
			<HeaderedContentControl.Header>
				<Border Classes="SectionTop">
					<StackPanel>
						<Grid Classes="SectionTitle" ColumnDefinitions="auto * auto" RowDefinitions="auto auto">
							<ic:SymbolIcon Grid.Column="0" Grid.Row="0" Symbol="PaintBucket" RenderTransform="ScaleX(1.4) ScaleY(1.4)" Margin="0 4 16 0"/>
							<TextBlock Grid.Column="1" Grid.Row="0" Classes="SectionTitleMain" Text="Customize qBittorrent Companion icon colors"/>
							<!--
							<DockPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" >
								<TextBlock Classes="SectionTitleDescription" Text="Unsatisfied with qBittorrent Companions icon? Create your own variant."/>
							</DockPanel>-->
						</Grid>

						<Border Padding="0" Margin="-10 8 -10 -14" BorderThickness="0 1 0 1" BorderBrush="{DynamicResource SystemChromeMediumColor}">
							<Border.Styles>
								<Style Selector="Button, SplitButton">
									<Setter Property="Padding" Value="4"/>
								</Style>
								<Style Selector="Button">
									<Setter Property="VerticalAlignment" Value="Stretch"/>
									<Setter Property="VerticalContentAlignment" Value="Center"/>
									<Setter Property="Margin" Value="0 0 0 2"/>
								</Style>
							</Border.Styles>
							<Grid ColumnDefinitions="auto auto * auto" ColumnSpacing="4">
								<SplitButton Grid.Column="0" Command="{Binding UndoCommand}" Classes="Stealth" IsEnabled="{Binding CanUndo}" Grid.IsSharedSizeScope="True">
									<ToolTip.Tip><TextBlock Text="Undo's the last color change, or see teh dropdown for the entire history of changes"/></ToolTip.Tip>
									<SplitButton.Flyout>
										<Flyout Placement="TopEdgeAlignedLeft">
											<vls:ColorsRecordHistoryView IsForRedo="False"/>
										</Flyout>
									</SplitButton.Flyout>
									<ic:SymbolIcon Symbol="ArrowUndo"/>
								</SplitButton>
								<SplitButton Grid.Column="1" Command="{Binding RedoCommand}" Classes="Stealth" IsEnabled="{Binding CanRedo}" Grid.IsSharedSizeScope="True">
									<ToolTip.Tip>Redo's the last undo, or see the dropdown for the entire 'forward' history</ToolTip.Tip>
									<SplitButton.Styles>
										<Style Selector="TextBlock">
											<Setter Property="Padding" Value="2"/>
										</Style>
									</SplitButton.Styles>
									<SplitButton.Flyout>
										<Flyout Placement="TopEdgeAlignedLeft">
											<vls:ColorsRecordHistoryView IsForRedo="True"/>
										</Flyout>
									</SplitButton.Flyout>
									<ic:SymbolIcon Symbol="ArrowRedo"/>
								</SplitButton>
								<SplitButton Grid.Column="3"
									VerticalAlignment="Center"
									Classes="MainButton accent"
									Margin="0"
									Padding="4">
									<SplitButton.Styles>
										<Styles>
											<Style Selector="FlyoutPresenter">
												<Setter Property="Padding" Value="0"/>
												<Setter Property="Margin" Value="0"/>
											</Style>
											<Style Selector="SplitButton Border#SeparatorBorder">
												<Setter Property="Opacity" Value="0"/>
											</Style>
										</Styles>
									</SplitButton.Styles>
									<Panel>
										<ic:SymbolIcon Symbol="Save" Foreground="White" HorizontalAlignment="Right"/>
									</Panel>
									<SplitButton.Flyout>
										<Flyout Placement="BottomEdgeAlignedRight" >
											<StackPanel MaxWidth="300">
												<Border Padding="8">
													<StackPanel Spacing="4">
														<CheckBox IsChecked="True" Content="Save icon" x:Name="SaveIconCheckBox"/>
														<TextBox DockPanel.Dock="Left" Watermark="Color profile filename" Text="{Binding CustomName}" x:Name="CustomNameTextBox"/>
														<Button Classes="accent" HorizontalAlignment="Stretch">
															<Panel>
																<DockPanel IsVisible="{Binding #SaveIconCheckBox.IsChecked}" HorizontalAlignment="Center" HorizontalSpacing="4">
																	<ic:SymbolIcon DockPanel.Dock="Right" Symbol="Save"/>
																	<TextBlock DockPanel.Dock="Left" Text="Save icon &amp; export color profile"/>
																</DockPanel>
																<DockPanel IsVisible="{Binding !#SaveIconCheckBox.IsChecked}" HorizontalAlignment="Center" HorizontalSpacing="4">
																	<ic:SymbolIcon DockPanel.Dock="Right" Symbol="Color"/>
																	<TextBlock DockPanel.Dock="Left" Text="Just export color profile"/>
																</DockPanel>
															</Panel>
														</Button>
													</StackPanel>
												</Border>
												<Border Background="{DynamicResource SystemChromeHighColor}" BorderBrush="{DynamicResource SystemListMediumColor}" BorderThickness="0 1 0 0" Padding="8">
													<DockPanel>
														<ic:SymbolIcon Symbol="Info" VerticalAlignment="Center" Margin="0 8 8 8"/>
														<TextBlock Text="The icon file and what it becomes the default for depends on the currently selected preview mode." TextWrapping="Wrap"/>
													</DockPanel>
												</Border>
											</StackPanel>
										</Flyout>
									</SplitButton.Flyout>
								</SplitButton>
							</Grid>
						</Border>
					</StackPanel>
				</Border>
			</HeaderedContentControl.Header>
			<Border Classes="SectionBottom" Margin="-2 -2 -2 -20">

				<Panel Grid.Column="0" Margin="0 4 0 0" VerticalAlignment="Center">
					<Panel.Styles>
						<Style Selector="Label">
							<Setter Property="Width" Value="70"/>
							<Setter Property="MinHeight" Value="30"/>
						</Style>
						<Style Selector="Label AccessText">
							<Setter Property="VerticalAlignment" Value="Center"/>
						</Style>
						<Style Selector="Canvas>Border>StackPanel">
							<Setter Property="Orientation" Value="Horizontal"/>
						</Style>
						<Style Selector="Canvas>Border">
							<Setter Property="Background" Value="{DynamicResource SystemChromeMediumColor}"/>
							<Setter Property="Padding" Value="0"/>
							<Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColor}"/>
							<Setter Property="BorderThickness" Value="1"/>
						</Style>
						<Style Selector="TextBox">
							<Setter Property="MinHeight" Value="26"/>
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="VerticalContentAlignment" Value="Center"/>
							<Setter Property="Padding" Value="4"/>
							<Setter Property="FontFamily" Value="Lucida Console, Ubuntu Mono, Liberation Mono, Menlo"/>
							<Setter Property="MinWidth" Value="87"/>
						</Style>
						<Style Selector="Path.PointerPath">
							<Setter Property="StrokeThickness" Value="4"/>
							<Setter Property="Stroke" Value="{DynamicResource SystemChromeLowColor}"/>
						</Style>
						<Style Selector="Path.OutlinePointerPath">
							<Setter Property="StrokeThickness" Value="8"/>
							<Setter Property="Stroke" Value="{DynamicResource SystemAccentColor}"/>
						</Style>
						<Style Selector="ColorPicker DropDownButton">
							<Setter Property="Background" Value="Transparent"/>
						</Style>
					</Panel.Styles>
					<Canvas x:Name="LogoCanvas" Height="272" Width="606">

						<Border x:Name="LargePreviewBorder" Canvas.Left="350" Canvas.Top="8" Padding="0" Background="{DynamicResource ColorControlCheckeredBackgroundBrush}">
							<Svg Source="{Binding PreviewSvg}" x:Name="Preview256Svg" />
						</Border>
						<Border>
							<StackPanel>
								<Label Target="Q_ColorPicker">q letter</Label>
								<ColorPicker x:Name="Q_ColorPicker" Color="{Binding Q_Color, Mode=TwoWay}"/>
								<ColorView Theme="{StaticResource JustHexTextBox}" Color="{Binding Q_Color, Mode=TwoWay}"/>
							</StackPanel>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #QB_ConnectorPath.Data}" />
						<Path Classes="PointerPath" x:Name="QB_ConnectorPath"
							Data="
								M 244,18 
								h 96
								l 108,110
								m -6,-2
								a 4,4 0 1,0 8,0
								a 4,4 0 1,0 -8,0
						"/>

						<Border Canvas.Top="44" >
							<StackPanel>
								<Label Target="B_ColorPicker">b letter</Label>
								<ColorPicker x:Name="B_ColorPicker" Color="{Binding B_Color, Mode=TwoWay}"/>
								<ColorView Theme="{StaticResource JustHexTextBox}" Color="{Binding B_Color, Mode=TwoWay}"/>
							</StackPanel>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #B_ConnectorPath.Data}" />
						<Path Classes="PointerPath" x:Name="B_ConnectorPath"
							Data="
								M 244,61
								h 185
								m -8,0
								a 4,4 0 1,0 8,0
								a 4,4 0 1,0 -8,0
						"/>

						<Border Canvas.Top="86">
							<StackPanel>
								<Label MinHeight="{Binding}" Target="C_ColorPicker">C shape</Label>
								<ColorPicker x:Name="C_ColorPicker" Color="{Binding C_Color, Mode=TwoWay}"/>
								<ColorView Theme="{StaticResource JustHexTextBox}" Color="{Binding C_Color, Mode=TwoWay}"/>
							</StackPanel>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #C_ConnectorPath.Data}"/>
						<Path Classes="PointerPath" x:Name="C_ConnectorPath"
							Data="
							M 244,103 
							h 127
							m -8,0
							a 4,4 0 1,0 8,0
							a 4,4 0 1,0 -8,0
						"/>

						<Border Canvas.Top="133">
							<Border.Styles>
								<Style Selector="Grid>Border">
									<Setter Property="Background" Value="{DynamicResource SystemAccentColorLight}"/>
								</Style>
								<Style Selector="Grid.DarkMode>Border">
									<Setter Property="Background" Value="{DynamicResource SystemAccentColorDark3}"/>
								</Style>
							</Border.Styles>
							<Grid ColumnDefinitions="70 auto auto auto auto" RowDefinitions="auto 1 auto 1 auto 1 auto" Classes.DarkMode="{Binding IsInDarkMode}">
								<TextBlock Grid.Column="0" Grid.ColumnSpan="5" Opacity="0.6" VerticalAlignment="Center" TextAlignment="Center" FontSize="10" Padding="4" Text="Background gradient"/>

								<Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" Classes="Line" HorizontalAlignment="Stretch"/>

								<Label Grid.Column="0" Grid.Row="2" Target="GradientCenter_ColorPicker">Center</Label>
								<ColorPicker Grid.Column="1" Grid.Row="2" Color="{Binding GradientCenterColor}" x:Name="GradientCenter_ColorPicker"/>
								<ColorView Grid.Column="3" Grid.Row="2" Color="{Binding GradientCenterColor, Mode=TwoWay}" Theme="{StaticResource JustHexTextBox}"/>
									
								<Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="3" HorizontalAlignment="Stretch"/>

								<Label Grid.Column="0" Grid.Row="4" Target="GradientFill_ColorPicker">Fill</Label>
								<ColorPicker Grid.Column="1" Grid.Row="4" Color="{Binding GradientFillColor}" x:Name="GradientFill_ColorPicker"/>
								<ColorView Grid.Column="3" Grid.Row="4" Color="{Binding GradientFillColor, Mode=TwoWay}" Theme="{StaticResource JustHexTextBox}"/>

								<Border Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="5" HorizontalAlignment="Stretch"/>

								<Label Grid.Column="0" Grid.Row="6" Target="GradientRim_ColorPicker">Rim</Label>
								<ColorPicker Grid.Column="1" Grid.Row="6" Color="{Binding GradientRimColor}" x:Name="GradientRim_ColorPicker"/>
								<ColorView Grid.Column="3" Grid.Row="6" Color="{Binding GradientRimColor, Mode=TwoWay}" Theme="{StaticResource JustHexTextBox}"/>
							</Grid>
						</Border>
						<Path Classes="OutlinePointerPath" Data="{Binding #BG_ConnectorPath.Data}"/>
						<Path Classes="PointerPath" x:Name="BG_ConnectorPath"
							Data="
								M 244,206 h 175
								m -8,0
								a 4,4 0 1,0 8,0
								a 4,4 0 1,0 -8,0
						"/>
					</Canvas>
				</Panel>


			</Border>
		</HeaderedContentControl>
	</StackPanel>
</ThemeVariantScope>
